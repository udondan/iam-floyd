{
	"Version": "2012-10-17",
	"Statement": [
		{
			"Sid": "RefactorSpaces",
			"Effect": "Allow",
			"Action": [
				"refactor-spaces:*"
			],
			"Resource": "*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"ec2:DescribeNetworkInterfaces",
				"ec2:DescribeRouteTables",
				"ec2:DescribeSecurityGroups",
				"ec2:DescribeSubnets",
				"ec2:DescribeVpcEndpointServiceConfigurations",
				"ec2:DescribeVpcs",
				"ec2:DescribeTransitGatewayVpcAttachments",
				"ec2:DescribeTransitGateways",
				"ec2:DescribeTags",
				"ec2:DescribeTransitGateways",
				"ec2:DescribeAccountAttributes",
				"ec2:DescribeInternetGateways"
			],
			"Resource": "*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"ec2:CreateTransitGateway",
				"ec2:CreateSecurityGroup",
				"ec2:CreateTransitGatewayVpcAttachment"
			],
			"Resource": "*",
			"Condition": {
				"Null": {
					"aws:RequestTag/refactor-spaces:environment-id": "false"
				}
			}
		},
		{
			"Effect": "Allow",
			"Action": [
				"ec2:CreateTransitGateway",
				"ec2:CreateSecurityGroup",
				"ec2:CreateTransitGatewayVpcAttachment"
			],
			"Resource": "*",
			"Condition": {
				"Null": {
					"aws:ResourceTag/refactor-spaces:environment-id": "false"
				}
			}
		},
		{
			"Effect": "Allow",
			"Action": [
				"ec2:CreateVpcEndpointServiceConfiguration"
			],
			"Resource": "*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"ec2:DeleteTransitGateway",
				"ec2:AuthorizeSecurityGroupIngress",
				"ec2:RevokeSecurityGroupIngress",
				"ec2:DeleteSecurityGroup",
				"ec2:DeleteTransitGatewayVpcAttachment",
				"ec2:CreateRoute",
				"ec2:DeleteRoute",
				"ec2:DeleteTags"
			],
			"Resource": "*",
			"Condition": {
				"Null": {
					"aws:ResourceTag/refactor-spaces:environment-id": "false"
				}
			}
		},
		{
			"Effect": "Allow",
			"Action": "ec2:DeleteVpcEndpointServiceConfigurations",
			"Resource": "*",
			"Condition": {
				"Null": {
					"aws:ResourceTag/refactor-spaces:application-id": "false"
				}
			}
		},
		{
			"Effect": "Allow",
			"Action": [
				"elasticloadbalancing:CreateLoadBalancer"
			],
			"Resource": "*",
			"Condition": {
				"Null": {
					"aws:RequestTag/refactor-spaces:application-id": "false"
				}
			}
		},
		{
			"Effect": "Allow",
			"Action": [
				"elasticloadbalancing:DescribeLoadBalancers",
				"elasticloadbalancing:DescribeTags",
				"elasticloadbalancing:DescribeTargetHealth",
				"elasticloadbalancing:DescribeTargetGroups",
				"elasticloadbalancing:DescribeListeners"
			],
			"Resource": "*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"elasticloadbalancing:RegisterTargets",
				"elasticloadbalancing:CreateLoadBalancerListeners",
				"elasticloadbalancing:CreateListener",
				"elasticloadbalancing:DeleteListener",
				"elasticloadbalancing:DeleteTargetGroup"
			],
			"Resource": "*",
			"Condition": {
				"StringLike": {
					"aws:ResourceTag/refactor-spaces:route-id": [
						"*"
					]
				}
			}
		},
		{
			"Effect": "Allow",
			"Action": "elasticloadbalancing:DeleteLoadBalancer",
			"Resource": "arn:*:elasticloadbalancing:*:*:loadbalancer/net/refactor-spaces-nlb-*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"elasticloadbalancing:AddTags",
				"elasticloadbalancing:CreateListener"
			],
			"Resource": "arn:*:elasticloadbalancing:*:*:loadbalancer/net/refactor-spaces-nlb-*",
			"Condition": {
				"Null": {
					"aws:RequestTag/refactor-spaces:route-id": "false"
				}
			}
		},
		{
			"Effect": "Allow",
			"Action": "elasticloadbalancing:DeleteListener",
			"Resource": "arn:*:elasticloadbalancing:*:*:listener/net/refactor-spaces-nlb-*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"elasticloadbalancing:DeleteTargetGroup",
				"elasticloadbalancing:RegisterTargets"
			],
			"Resource": "arn:*:elasticloadbalancing:*:*:targetgroup/refactor-spaces-tg-*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"elasticloadbalancing:AddTags",
				"elasticloadbalancing:CreateTargetGroup"
			],
			"Resource": "arn:*:elasticloadbalancing:*:*:targetgroup/refactor-spaces-tg-*",
			"Condition": {
				"Null": {
					"aws:RequestTag/refactor-spaces:route-id": "false"
				}
			}
		},
		{
			"Effect": "Allow",
			"Action": [
				"apigateway:GET",
				"apigateway:DELETE",
				"apigateway:PATCH",
				"apigateway:POST",
				"apigateway:PUT",
				"apigateway:UpdateRestApiPolicy"
			],
			"Resource": [
				"arn:aws:apigateway:*::/restapis",
				"arn:aws:apigateway:*::/restapis/*",
				"arn:aws:apigateway:*::/vpclinks",
				"arn:aws:apigateway:*::/vpclinks/*",
				"arn:aws:apigateway:*::/tags",
				"arn:aws:apigateway:*::/tags/*"
			],
			"Condition": {
				"Null": {
					"aws:ResourceTag/refactor-spaces:application-id": "false"
				}
			}
		},
		{
			"Effect": "Allow",
			"Action": "apigateway:GET",
			"Resource": [
				"arn:aws:apigateway:*::/vpclinks",
				"arn:aws:apigateway:*::/vpclinks/*"
			]
		},
		{
			"Effect": "Allow",
			"Action": [
				"organizations:DescribeOrganization"
			],
			"Resource": "*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"cloudformation:CreateStack"
			],
			"Resource": "*"
		},
		{
			"Effect": "Allow",
			"Action": "iam:CreateServiceLinkedRole",
			"Resource": "*",
			"Condition": {
				"StringEquals": {
					"iam:AWSServiceName": "refactor-spaces.amazonaws.com"
				}
			}
		},
		{
			"Effect": "Allow",
			"Action": "iam:CreateServiceLinkedRole",
			"Resource": "*",
			"Condition": {
				"StringEquals": {
					"iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
				}
			}
		}
	]
}