{
	"Version": "2012-10-17",
	"Statement": [
		{
			"Effect": "Allow",
			"Action": [
				"a4b:Get*",
				"a4b:List*",
				"a4b:Search*",
				"access-analyzer:GetAccessPreview",
				"access-analyzer:GetAnalyzedResource",
				"access-analyzer:GetAnalyzer",
				"access-analyzer:GetArchiveRule",
				"access-analyzer:GetFinding",
				"access-analyzer:GetGeneratedPolicy",
				"access-analyzer:ListAccessPreviewFindings",
				"access-analyzer:ListAccessPreviews",
				"access-analyzer:ListAnalyzedResources",
				"access-analyzer:ListAnalyzers",
				"access-analyzer:ListArchiveRules",
				"access-analyzer:ListFindings",
				"access-analyzer:ListPolicyGenerations",
				"access-analyzer:ListTagsForResource",
				"access-analyzer:ValidatePolicy",
				"acm-pca:Describe*",
				"acm-pca:Get*",
				"acm-pca:List*",
				"acm:Describe*",
				"acm:Get*",
				"acm:List*",
				"airflow:ListEnvironments",
				"airflow:ListTagsForResource",
				"amplify:GetApp",
				"amplify:GetBranch",
				"amplify:GetDomainAssociation",
				"amplify:GetJob",
				"amplify:ListApps",
				"amplify:ListBranches",
				"amplify:ListDomainAssociations",
				"amplify:ListJobs",
				"apigateway:GET",
				"appconfig:GetApplication",
				"appconfig:GetConfiguration",
				"appconfig:GetConfigurationProfile",
				"appconfig:GetDeployment",
				"appconfig:GetDeploymentStrategy",
				"appconfig:GetEnvironment",
				"appconfig:GetHostedConfigurationVersion",
				"appconfig:ListApplications",
				"appconfig:ListConfigurationProfiles",
				"appconfig:ListDeployments",
				"appconfig:ListDeploymentStrategies",
				"appconfig:ListEnvironments",
				"appconfig:ListHostedConfigurationVersions",
				"appconfig:ListTagsForResource",
				"application-autoscaling:Describe*",
				"applicationinsights:Describe*",
				"applicationinsights:List*",
				"appmesh:Describe*",
				"appmesh:List*",
				"appstream:Describe*",
				"appstream:List*",
				"appsync:Get*",
				"appsync:List*",
				"aps:DescribeAlertManagerDefinition",
				"aps:DescribeRuleGroupsNamespace",
				"aps:DescribeWorkspace",
				"aps:GetAlertManagerSilence",
				"aps:GetAlertManagerStatus",
				"aps:GetLabels",
				"aps:GetMetricMetadata",
				"aps:GetSeries",
				"aps:ListAlerts",
				"aps:ListAlertManagerAlerts",
				"aps:ListAlertManagerAlertGroups",
				"aps:ListAlertManagerReceivers",
				"aps:ListAlertManagerSilences",
				"aps:ListRules",
				"aps:ListRuleGroupsNamespaces",
				"aps:ListTagsForResource",
				"aps:ListWorkspaces",
				"aps:QueryMetrics",
				"athena:Batch*",
				"athena:Get*",
				"athena:List*",
				"auditmanager:GetAccountStatus",
				"auditmanager:GetAssessment",
				"auditmanager:GetAssessmentFramework",
				"auditmanager:GetAssessmentReportUrl",
				"auditmanager:GetChangeLogs",
				"auditmanager:GetControl",
				"auditmanager:GetDelegations",
				"auditmanager:GetEvidence",
				"auditmanager:GetEvidenceByEvidenceFolder",
				"auditmanager:GetEvidenceFolder",
				"auditmanager:GetEvidenceFoldersByAssessment",
				"auditmanager:GetEvidenceFoldersByAssessmentControl",
				"auditmanager:GetOrganizationAdminAccount",
				"auditmanager:GetServicesInScope",
				"auditmanager:GetSettings",
				"auditmanager:ListAssessmentFrameworks",
				"auditmanager:ListAssessmentReports",
				"auditmanager:ListAssessments",
				"auditmanager:ListControls",
				"auditmanager:ListKeywordsForDataSource",
				"auditmanager:ListNotifications",
				"auditmanager:ListTagsForResource",
				"auditmanager:ValidateAssessmentReportIntegrity",
				"autoscaling-plans:Describe*",
				"autoscaling-plans:GetScalingPlanResourceForecastData",
				"autoscaling:Describe*",
				"aws-portal:View*",
				"backup:Describe*",
				"backup:Get*",
				"backup:List*",
				"batch:Describe*",
				"batch:List*",
				"braket:GetDevice",
				"braket:GetQuantumTask",
				"braket:SearchDevices",
				"braket:SearchQuantumTasks",
				"budgets:Describe*",
				"budgets:View*",
				"cassandra:Select",
				"ce:DescribeCostCategoryDefinition",
				"ce:DescribeNotificationSubscription",
				"ce:DescribeReport",
				"ce:GetAnomalies",
				"ce:GetAnomalyMonitors",
				"ce:GetAnomalySubscriptions",
				"ce:GetCostAndUsage",
				"ce:GetCostAndUsageWithResources",
				"ce:GetCostCategories",
				"ce:GetCostForecast",
				"ce:GetDimensionValues",
				"ce:GetPreferences",
				"ce:GetReservationCoverage",
				"ce:GetReservationPurchaseRecommendation",
				"ce:GetReservationUtilization",
				"ce:GetRightsizingRecommendation",
				"ce:GetSavingsPlansCoverage",
				"ce:GetSavingsPlansPurchaseRecommendation",
				"ce:GetSavingsPlansUtilization",
				"ce:GetSavingsPlansUtilizationDetails",
				"ce:GetTags",
				"ce:GetUsageForecast",
				"ce:ListCostCategoryDefinitions",
				"chatbot:Describe*",
				"chatbot:Get*",
				"chime:Get*",
				"chime:List*",
				"chime:Retrieve*",
				"chime:Search*",
				"chime:Validate*",
				"cloud9:Describe*",
				"cloud9:List*",
				"clouddirectory:BatchRead",
				"clouddirectory:Get*",
				"clouddirectory:List*",
				"clouddirectory:LookupPolicy",
				"cloudformation:Describe*",
				"cloudformation:Detect*",
				"cloudformation:Estimate*",
				"cloudformation:Get*",
				"cloudformation:List*",
				"cloudfront:DescribeFunction",
				"cloudfront:Get*",
				"cloudfront:List*",
				"cloudhsm:Describe*",
				"cloudhsm:Get*",
				"cloudhsm:List*",
				"cloudsearch:Describe*",
				"cloudsearch:List*",
				"cloudtrail:Describe*",
				"cloudtrail:Get*",
				"cloudtrail:List*",
				"cloudtrail:LookupEvents",
				"cloudwatch:Describe*",
				"cloudwatch:Get*",
				"cloudwatch:List*",
				"codeartifact:DescribeDomain",
				"codeartifact:DescribePackageVersion",
				"codeartifact:DescribeRepository",
				"codeartifact:GetAuthorizationToken",
				"codeartifact:GetDomainPermissionsPolicy",
				"codeartifact:GetPackageVersionAsset",
				"codeartifact:GetPackageVersionReadme",
				"codeartifact:GetRepositoryEndpoint",
				"codeartifact:GetRepositoryPermissionsPolicy",
				"codeartifact:ListDomains",
				"codeartifact:ListPackages",
				"codeartifact:ListPackageVersionAssets",
				"codeartifact:ListPackageVersionDependencies",
				"codeartifact:ListPackageVersions",
				"codeartifact:ListRepositories",
				"codeartifact:ListRepositoriesInDomain",
				"codeartifact:ListTagsForResource",
				"codeartifact:ReadFromRepository",
				"codebuild:BatchGet*",
				"codebuild:DescribeCodeCoverages",
				"codebuild:DescribeTestCases",
				"codebuild:List*",
				"codecommit:BatchGet*",
				"codecommit:Describe*",
				"codecommit:Get*",
				"codecommit:GitPull",
				"codecommit:List*",
				"codedeploy:BatchGet*",
				"codedeploy:Get*",
				"codedeploy:List*",
				"codeguru-profiler:Describe*",
				"codeguru-profiler:Get*",
				"codeguru-profiler:List*",
				"codeguru-reviewer:Describe*",
				"codeguru-reviewer:Get*",
				"codeguru-reviewer:List*",
				"codepipeline:Get*",
				"codepipeline:List*",
				"codestar-connections:GetConnection",
				"codestar-connections:GetHost",
				"codestar-connections:ListConnections",
				"codestar-connections:ListHosts",
				"codestar-connections:ListTagsForResource",
				"codestar-notifications:describeNotificationRule",
				"codestar-notifications:listEventTypes",
				"codestar-notifications:listNotificationRules",
				"codestar-notifications:listTagsForResource",
				"codestar-notifications:ListTargets",
				"codestar:Describe*",
				"codestar:Get*",
				"codestar:List*",
				"codestar:Verify*",
				"cognito-identity:Describe*",
				"cognito-identity:GetCredentialsForIdentity",
				"cognito-identity:GetIdentityPoolRoles",
				"cognito-identity:GetOpenIdToken",
				"cognito-identity:GetOpenIdTokenForDeveloperIdentity",
				"cognito-identity:List*",
				"cognito-identity:Lookup*",
				"cognito-idp:AdminGet*",
				"cognito-idp:AdminList*",
				"cognito-idp:Describe*",
				"cognito-idp:Get*",
				"cognito-idp:List*",
				"cognito-sync:Describe*",
				"cognito-sync:Get*",
				"cognito-sync:List*",
				"cognito-sync:QueryRecords",
				"compute-optimizer:DescribeRecommendationExportJobs",
				"compute-optimizer:GetAutoScalingGroupRecommendations",
				"compute-optimizer:GetEBSVolumeRecommendations",
				"compute-optimizer:GetEC2InstanceRecommendations",
				"compute-optimizer:GetEC2RecommendationProjectedMetrics",
				"compute-optimizer:GetEnrollmentStatus",
				"compute-optimizer:GetEnrollmentStatusesForOrganization",
				"compute-optimizer:GetLambdaFunctionRecommendations",
				"compute-optimizer:GetRecommendationSummaries",
				"config:BatchGetAggregateResourceConfig",
				"config:BatchGetResourceConfig",
				"config:Deliver*",
				"config:Describe*",
				"config:Get*",
				"config:List*",
				"config:SelectAggregateResourceConfig",
				"config:SelectResourceConfig",
				"connect:Describe*",
				"connect:GetFederationToken",
				"connect:List*",
				"dataexchange:Get*",
				"dataexchange:List*",
				"datapipeline:Describe*",
				"datapipeline:EvaluateExpression",
				"datapipeline:Get*",
				"datapipeline:List*",
				"datapipeline:QueryObjects",
				"datapipeline:Validate*",
				"datasync:Describe*",
				"datasync:List*",
				"dax:BatchGetItem",
				"dax:Describe*",
				"dax:GetItem",
				"dax:ListTags",
				"dax:Query",
				"dax:Scan",
				"deepcomposer:GetComposition",
				"deepcomposer:GetModel",
				"deepcomposer:GetSampleModel",
				"deepcomposer:ListCompositions",
				"deepcomposer:ListModels",
				"deepcomposer:ListSampleModels",
				"deepcomposer:ListTrainingTopics",
				"detective:Get*",
				"detective:List*",
				"detective:SearchGraph",
				"devicefarm:Get*",
				"devicefarm:List*",
				"devops-guru:DescribeAccountHealth",
				"devops-guru:DescribeAccountOverview",
				"devops-guru:DescribeAnomaly",
				"devops-guru:DescribeFeedback",
				"devops-guru:DescribeInsight",
				"devops-guru:DescribeResourceCollectionHealth",
				"devops-guru:DescribeServiceIntegration",
				"devops-guru:GetCostEstimation",
				"devops-guru:GetResourceCollection",
				"devops-guru:ListAnomaliesForInsight",
				"devops-guru:ListEvents",
				"devops-guru:ListInsights",
				"devops-guru:ListNotificationChannels",
				"devops-guru:ListRecommendations",
				"devops-guru:SearchInsights",
				"devops-guru:StartCostEstimation",
				"directconnect:Describe*",
				"discovery:Describe*",
				"discovery:Get*",
				"discovery:List*",
				"dlm:Get*",
				"dms:Describe*",
				"dms:List*",
				"dms:Test*",
				"ds:Check*",
				"ds:Describe*",
				"ds:Get*",
				"ds:List*",
				"ds:Verify*",
				"dynamodb:BatchGet*",
				"dynamodb:Describe*",
				"dynamodb:Get*",
				"dynamodb:List*",
				"dynamodb:Query",
				"dynamodb:Scan",
				"ec2:Describe*",
				"ec2:Get*",
				"ec2:ListSnapshotsInRecycleBin",
				"ec2:SearchLocalGatewayRoutes",
				"ec2:SearchTransitGatewayRoutes",
				"ec2messages:Get*",
				"ecr-public:BatchCheckLayerAvailability",
				"ecr-public:DescribeImages",
				"ecr-public:DescribeImageTags",
				"ecr-public:DescribeRegistries",
				"ecr-public:DescribeRepositories",
				"ecr-public:GetAuthorizationToken",
				"ecr-public:GetRegistryCatalogData",
				"ecr-public:GetRepositoryCatalogData",
				"ecr-public:GetRepositoryPolicy",
				"ecr-public:ListTagsForResource",
				"ecr:BatchCheck*",
				"ecr:BatchGet*",
				"ecr:Describe*",
				"ecr:Get*",
				"ecr:List*",
				"ecs:Describe*",
				"ecs:List*",
				"eks:Describe*",
				"eks:List*",
				"elasticache:Describe*",
				"elasticache:List*",
				"elasticbeanstalk:Check*",
				"elasticbeanstalk:Describe*",
				"elasticbeanstalk:List*",
				"elasticbeanstalk:Request*",
				"elasticbeanstalk:Retrieve*",
				"elasticbeanstalk:Validate*",
				"elasticfilesystem:Describe*",
				"elasticloadbalancing:Describe*",
				"elasticmapreduce:Describe*",
				"elasticmapreduce:GetBlockPublicAccessConfiguration",
				"elasticmapreduce:List*",
				"elasticmapreduce:View*",
				"elastictranscoder:List*",
				"elastictranscoder:Read*",
				"elemental-appliances-software:Get*",
				"elemental-appliances-software:List*",
				"emr-containers:DescribeJobRun",
				"emr-containers:DescribeManagedEndpoint",
				"emr-containers:DescribeVirtualCluster",
				"emr-containers:ListJobRuns",
				"emr-containers:ListManagedEndpoints",
				"emr-containers:ListVirtualClusters",
				"emr-containers:ListTagsForResource",
				"es:Describe*",
				"es:ESHttpGet",
				"es:ESHttpHead",
				"es:Get*",
				"es:List*",
				"events:Describe*",
				"events:List*",
				"events:Test*",
				"firehose:Describe*",
				"firehose:List*",
				"fis:GetAction",
				"fis:GetExperiment",
				"fis:GetExperimentTemplate",
				"fis:ListActions",
				"fis:ListExperiments",
				"fis:ListExperimentTemplates",
				"fis:ListTagsForResource",
				"fms:GetAdminAccount",
				"fms:GetAppsList",
				"fms:GetComplianceDetail",
				"fms:GetNotificationChannel",
				"fms:GetPolicy",
				"fms:GetProtectionStatus",
				"fms:GetProtocolsList",
				"fms:GetViolationDetails",
				"fms:ListAppsLists",
				"fms:ListComplianceStatus",
				"fms:ListMemberAccounts",
				"fms:ListPolicies",
				"fms:ListProtocolsLists",
				"fms:ListTagsForResource",
				"forecast:DescribeDataset",
				"forecast:DescribeDatasetGroup",
				"forecast:DescribeDatasetImportJob",
				"forecast:DescribeForecast",
				"forecast:DescribeForecastExportJob",
				"forecast:DescribePredictor",
				"forecast:DescribePredictorBacktestExportJob",
				"forecast:GetAccuracyMetrics",
				"forecast:ListDatasetGroups",
				"forecast:ListDatasetImportJobs",
				"forecast:ListDatasets",
				"forecast:ListForecastExportJobs",
				"forecast:ListForecasts",
				"forecast:ListPredictorBacktestExportJobs",
				"forecast:ListPredictors",
				"forecast:QueryForecast",
				"freertos:Describe*",
				"freertos:List*",
				"fsx:Describe*",
				"fsx:List*",
				"gamelift:Describe*",
				"gamelift:Get*",
				"gamelift:List*",
				"gamelift:ResolveAlias",
				"gamelift:Search*",
				"glacier:Describe*",
				"glacier:Get*",
				"glacier:List*",
				"globalaccelerator:Describe*",
				"globalaccelerator:List*",
				"glue:BatchGetDevEndpoints",
				"glue:BatchGetJobs",
				"glue:BatchGetPartition",
				"glue:BatchGetTriggers",
				"glue:BatchGetWorkflows",
				"glue:CheckSchemaVersionValidity",
				"glue:GetCatalogImportStatus",
				"glue:GetClassifier",
				"glue:GetClassifiers",
				"glue:GetCrawler",
				"glue:GetCrawlerMetrics",
				"glue:GetCrawlers",
				"glue:GetDatabase",
				"glue:GetDatabases",
				"glue:GetDataCatalogEncryptionSettings",
				"glue:GetDataflowGraph",
				"glue:GetDevEndpoint",
				"glue:GetDevEndpoints",
				"glue:GetJob",
				"glue:GetJobBookmark",
				"glue:GetJobRun",
				"glue:GetJobRuns",
				"glue:GetJobs",
				"glue:GetMapping",
				"glue:GetMLTaskRun",
				"glue:GetMLTaskRuns",
				"glue:GetMLTransform",
				"glue:GetMLTransforms",
				"glue:GetPartition",
				"glue:GetPartitions",
				"glue:GetPlan",
				"glue:GetRegistry",
				"glue:GetResourcePolicy",
				"glue:GetSchema",
				"glue:GetSchemaByDefinition",
				"glue:GetSchemaVersion",
				"glue:GetSchemaVersionsDiff",
				"glue:GetSecurityConfiguration",
				"glue:GetSecurityConfigurations",
				"glue:GetTable",
				"glue:GetTables",
				"glue:GetTableVersion",
				"glue:GetTableVersions",
				"glue:GetTags",
				"glue:GetTrigger",
				"glue:GetTriggers",
				"glue:GetUserDefinedFunction",
				"glue:GetUserDefinedFunctions",
				"glue:GetWorkflow",
				"glue:GetWorkflowRun",
				"glue:GetWorkflowRunProperties",
				"glue:GetWorkflowRuns",
				"glue:ListCrawlers",
				"glue:ListDevEndpoints",
				"glue:ListJobs",
				"glue:ListMLTransforms",
				"glue:ListRegistries",
				"glue:ListSchemas",
				"glue:ListSchemaVersions",
				"glue:ListTriggers",
				"glue:ListWorkflows",
				"glue:QuerySchemaVersionMetadata",
				"greengrass:DescribeComponent",
				"greengrass:Get*",
				"greengrass:List*",
				"groundstation:DescribeContact",
				"groundstation:GetConfig",
				"groundstation:GetDataflowEndpointGroup",
				"groundstation:GetMinuteUsage",
				"groundstation:GetMissionProfile",
				"groundstation:GetSatellite",
				"groundstation:ListConfigs",
				"groundstation:ListContacts",
				"groundstation:ListDataflowEndpointGroups",
				"groundstation:ListGroundStations",
				"groundstation:ListMissionProfiles",
				"groundstation:ListSatellites",
				"groundstation:ListTagsForResource",
				"guardduty:DescribeOrganizationConfiguration",
				"guardduty:DescribePublishingDestination",
				"guardduty:Get*",
				"guardduty:List*",
				"health:Describe*",
				"iam:Generate*",
				"iam:Get*",
				"iam:List*",
				"iam:Simulate*",
				"imagebuilder:Get*",
				"imagebuilder:List*",
				"importexport:Get*",
				"importexport:List*",
				"inspector:Describe*",
				"inspector:Get*",
				"inspector:List*",
				"inspector:Preview*",
				"iot:Describe*",
				"iot:Get*",
				"iot:List*",
				"iot1click:DescribeDevice",
				"iot1click:DescribePlacement",
				"iot1click:DescribeProject",
				"iot1click:GetDeviceMethods",
				"iot1click:GetDevicesInPlacement",
				"iot1click:ListDeviceEvents",
				"iot1click:ListDevices",
				"iot1click:ListPlacements",
				"iot1click:ListProjects",
				"iot1click:ListTagsForResource",
				"iotanalytics:Describe*",
				"iotanalytics:Get*",
				"iotanalytics:List*",
				"iotanalytics:SampleChannelData",
				"iotevents:DescribeAlarm",
				"iotevents:DescribeAlarmModel",
				"iotevents:DescribeDetector",
				"iotevents:DescribeDetectorModel",
				"iotevents:DescribeInput",
				"iotevents:DescribeLoggingOptions",
				"iotevents:ListAlarmModels",
				"iotevents:ListAlarmModelVersions",
				"iotevents:ListAlarms",
				"iotevents:ListDetectorModels",
				"iotevents:ListDetectorModelVersions",
				"iotevents:ListDetectors",
				"iotevents:ListInputs",
				"iotevents:ListTagsForResource",
				"iotfleethub:DescribeApplication",
				"iotfleethub:ListApplications",
				"iotroborunner:GetAction",
				"iotroborunner:GetActionTemplate",
				"iotroborunner:GetActivity",
				"iotroborunner:GetDestination",
				"iotroborunner:GetDestinationRelationship",
				"iotroborunner:GetSite",
				"iotroborunner:GetTask",
				"iotroborunner:GetWorker",
				"iotroborunner:GetWorkerFleet",
				"iotroborunner:ListActions",
				"iotroborunner:ListActionTemplates",
				"iotroborunner:ListActivities",
				"iotroborunner:ListDestinations",
				"iotroborunner:ListDestinationRelationships",
				"iotroborunner:ListSites",
				"iotroborunner:ListTasks",
				"iotroborunner:ListWorkers",
				"iotroborunner:ListWorkerFleets",
				"iotsitewise:Describe*",
				"iotsitewise:Get*",
				"iotsitewise:List*",
				"iotwireless:GetDestination",
				"iotwireless:GetDeviceProfile",
				"iotwireless:GetPartnerAccount",
				"iotwireless:GetServiceEndpoint",
				"iotwireless:GetServiceProfile",
				"iotwireless:GetWirelessDevice",
				"iotwireless:GetWirelessDeviceStatistics",
				"iotwireless:GetWirelessGateway",
				"iotwireless:GetWirelessGatewayCertificate",
				"iotwireless:GetWirelessGatewayFirmwareInformation",
				"iotwireless:GetWirelessGatewayStatistics",
				"iotwireless:GetWirelessGatewayTask",
				"iotwireless:GetWirelessGatewayTaskDefinition",
				"iotwireless:ListDestinations",
				"iotwireless:ListDeviceProfiles",
				"iotwireless:ListPartnerAccounts",
				"iotwireless:ListServiceProfiles",
				"iotwireless:ListTagsForResource",
				"iotwireless:ListWirelessDevices",
				"iotwireless:ListWirelessGateways",
				"iotwireless:ListWirelessGatewayTaskDefinitions",
				"ivs:BatchGetChannel",
				"ivs:GetChannel",
				"ivs:GetPlaybackKeyPair",
				"ivs:GetRecordingConfiguration",
				"ivs:ListChannels",
				"ivs:ListPlaybackKeyPairs",
				"ivs:ListRecordingConfigurations",
				"ivs:ListStreams",
				"ivs:ListTagsForResource",
				"kafka:Describe*",
				"kafka:Get*",
				"kafka:List*",
				"kafkaconnect:DescribeConnector",
				"kafkaconnect:DescribeCustomPlugin",
				"kafkaconnect:DescribeWorkerConfiguration",
				"kafkaconnect:ListConnectors",
				"kafkaconnect:ListCustomPlugins",
				"kafkaconnect:ListWorkerConfigurations",
				"kendra:DescribeDataSource",
				"kendra:DescribeFaq",
				"kendra:DescribeIndex",
				"kendra:DescribeQuerySuggestionsBlockList",
				"kendra:DescribeQuerySuggestionsConfig",
				"kendra:DescribeThesaurus",
				"kendra:GetQuerySuggestions",
				"kendra:ListDataSources",
				"kendra:ListDataSourceSyncJobs",
				"kendra:ListFaqs",
				"kendra:ListIndices",
				"kendra:ListQuerySuggestionsBlockLists",
				"kendra:ListTagsForResource",
				"kendra:ListThesauri",
				"kendra:Query",
				"kinesis:Describe*",
				"kinesis:Get*",
				"kinesis:List*",
				"kinesisanalytics:Describe*",
				"kinesisanalytics:Discover*",
				"kinesisanalytics:Get*",
				"kinesisanalytics:List*",
				"kinesisvideo:Describe*",
				"kinesisvideo:Get*",
				"kinesisvideo:List*",
				"kms:Describe*",
				"kms:Get*",
				"kms:List*",
				"lambda:Get*",
				"lambda:List*",
				"lex:DescribeBot",
				"lex:DescribeBotAlias",
				"lex:DescribeBotChannel",
				"lex:DescribeBotLocale",
				"lex:DescribeBotVersion",
				"lex:DescribeExport",
				"lex:DescribeImport",
				"lex:DescribeIntent",
				"lex:DescribeResourcePolicy",
				"lex:DescribeSlot",
				"lex:DescribeSlotType",
				"lex:Get*",
				"lex:ListBotAliases",
				"lex:ListBotChannels",
				"lex:ListBotLocales",
				"lex:ListBots",
				"lex:ListBotVersions",
				"lex:ListBuiltInIntents",
				"lex:ListBuiltInSlotTypes",
				"lex:ListExports",
				"lex:ListImports",
				"lex:ListIntents",
				"lex:ListSlots",
				"lex:ListSlotTypes",
				"lex:ListTagsForResource",
				"license-manager:Get*",
				"license-manager:List*",
				"lightsail:GetActiveNames",
				"lightsail:GetAlarms",
				"lightsail:GetAutoSnapshots",
				"lightsail:GetBlueprints",
				"lightsail:GetBucketAccessKeys",
				"lightsail:GetBucketBundles",
				"lightsail:GetBucketMetricData",
				"lightsail:GetBuckets",
				"lightsail:GetBundles",
				"lightsail:GetCertificates",
				"lightsail:GetCloudFormationStackRecords",
				"lightsail:GetContainerAPIMetadata",
				"lightsail:GetContainerImages",
				"lightsail:GetContainerServiceDeployments",
				"lightsail:GetContainerServiceMetricData",
				"lightsail:GetContainerServicePowers",
				"lightsail:GetContainerServices",
				"lightsail:GetDisk",
				"lightsail:GetDisks",
				"lightsail:GetDiskSnapshot",
				"lightsail:GetDiskSnapshots",
				"lightsail:GetDistributionBundles",
				"lightsail:GetDistributionLatestCacheReset",
				"lightsail:GetDistributionMetricData",
				"lightsail:GetDistributions",
				"lightsail:GetDomain",
				"lightsail:GetDomains",
				"lightsail:GetExportSnapshotRecords",
				"lightsail:GetInstance",
				"lightsail:GetInstanceMetricData",
				"lightsail:GetInstancePortStates",
				"lightsail:GetInstances",
				"lightsail:GetInstanceSnapshot",
				"lightsail:GetInstanceSnapshots",
				"lightsail:GetInstanceState",
				"lightsail:GetKeyPair",
				"lightsail:GetKeyPairs",
				"lightsail:GetLoadBalancer",
				"lightsail:GetLoadBalancerMetricData",
				"lightsail:GetLoadBalancers",
				"lightsail:GetLoadBalancerTlsCertificates",
				"lightsail:GetOperation",
				"lightsail:GetOperations",
				"lightsail:GetOperationsForResource",
				"lightsail:GetRegions",
				"lightsail:GetRelationalDatabase",
				"lightsail:GetRelationalDatabaseBlueprints",
				"lightsail:GetRelationalDatabaseBundles",
				"lightsail:GetRelationalDatabaseEvents",
				"lightsail:GetRelationalDatabaseLogEvents",
				"lightsail:GetRelationalDatabaseLogStreams",
				"lightsail:GetRelationalDatabaseMetricData",
				"lightsail:GetRelationalDatabaseParameters",
				"lightsail:GetRelationalDatabases",
				"lightsail:GetRelationalDatabaseSnapshot",
				"lightsail:GetRelationalDatabaseSnapshots",
				"lightsail:GetStaticIp",
				"lightsail:GetStaticIps",
				"lightsail:Is*",
				"logs:Describe*",
				"logs:FilterLogEvents",
				"logs:Get*",
				"logs:ListTagsLogGroup",
				"logs:StartQuery",
				"logs:StopQuery",
				"logs:TestMetricFilter",
				"lookoutvision:DescribeDataset",
				"lookoutvision:DescribeModel",
				"lookoutvision:DescribeModelPackagingJob",
				"lookoutvision:DescribeProject",
				"lookoutvision:ListDatasetEntries",
				"lookoutvision:ListModels",
				"lookoutvision:ListModelPackagingJobs",
				"lookoutvision:ListProjects",
				"lookoutvision:ListTagsForResource",
				"machinelearning:Describe*",
				"machinelearning:Get*",
				"macie:ListMemberAccounts",
				"macie:ListS3Resources",
				"macie2:BatchGetCustomDataIdentifiers",
				"macie2:DescribeBuckets",
				"macie2:DescribeClassificationJob",
				"macie2:DescribeOrganizationConfiguration",
				"macie2:GetAdministratorAccount",
				"macie2:GetBucketStatistics",
				"macie2:GetClassificationExportConfiguration",
				"macie2:GetCustomDataIdentifier",
				"macie2:GetFindings",
				"macie2:GetFindingsFilter",
				"macie2:GetFindingsPublicationConfiguration",
				"macie2:GetFindingStatistics",
				"macie2:GetInvitationsCount",
				"macie2:GetMacieSession",
				"macie2:GetMember",
				"macie2:GetUsageStatistics",
				"macie2:GetUsageTotals",
				"macie2:ListClassificationJobs",
				"macie2:ListCustomDataIdentifiers",
				"macie2:ListFindings",
				"macie2:ListFindingsFilters",
				"macie2:ListInvitations",
				"macie2:ListMembers",
				"macie2:ListOrganizationAdminAccounts",
				"macie2:ListTagsForResource",
				"macie2:SearchResources",
				"managedblockchain:GetNetwork",
				"managedblockchain:GetProposal",
				"managedblockchain:GetMember",
				"managedblockchain:GetNode",
				"managedblockchain:ListNetworks",
				"managedblockchain:ListProposals",
				"managedblockchain:ListProposalVotes",
				"managedblockchain:ListInvitations",
				"managedblockchain:ListMembers",
				"managedblockchain:ListNodes",
				"managedblockchain:ListTagsForResource",
				"mediaconnect:DescribeFlow",
				"mediaconnect:DescribeOffering",
				"mediaconnect:DescribeReservation",
				"mediaconnect:ListFlows",
				"mediaconvert:DescribeEndpoints",
				"mediaconvert:Get*",
				"mediaconvert:List*",
				"mediapackage:Describe*",
				"mediapackage:List*",
				"mediastore:DescribeContainer",
				"mediastore:DescribeObject",
				"mediastore:GetContainerPolicy",
				"mediastore:GetCorsPolicy",
				"mediastore:GetLifecyclePolicy",
				"mediastore:GetMetricPolicy",
				"mediastore:GetObject",
				"mediastore:ListContainers",
				"mediastore:ListItems",
				"mediastore:ListTagsForResource",
				"mgh:Describe*",
				"mgh:GetHomeRegion",
				"mgh:List*",
				"mgn:DescribeJobLogItems",
				"mgn:DescribeJobs",
				"mgn:DescribeReplicationConfigurationTemplates",
				"mgn:DescribeSourceServers",
				"mgn:GetLaunchConfiguration",
				"mgn:GetReplicationConfiguration",
				"mobileanalytics:Get*",
				"mobilehub:Describe*",
				"mobilehub:Export*",
				"mobilehub:Generate*",
				"mobilehub:Get*",
				"mobilehub:List*",
				"mobilehub:Validate*",
				"mobilehub:Verify*",
				"mobiletargeting:Get*",
				"mobiletargeting:List*",
				"monitron:GetProject",
				"monitron:GetProjectAdminUser",
				"monitron:ListProjects",
				"monitron:ListTagsForResource",
				"mq:Describe*",
				"mq:List*",
				"network-firewall:DescribeFirewall",
				"network-firewall:DescribeFirewallPolicy",
				"network-firewall:DescribeLoggingConfiguration",
				"network-firewall:DescribeResourcePolicy",
				"network-firewall:DescribeRuleGroup",
				"network-firewall:DescribeRuleGroupMetadata",
				"network-firewall:ListFirewallPolicies",
				"network-firewall:ListFirewalls",
				"network-firewall:ListRuleGroups",
				"network-firewall:ListTagsForResource",
				"networkmanager:DescribeGlobalNetworks",
				"networkmanager:GetConnections",
				"networkmanager:GetCustomerGatewayAssociations",
				"networkmanager:GetDevices",
				"networkmanager:GetLinkAssociations",
				"networkmanager:GetLinks",
				"networkmanager:GetSites",
				"networkmanager:GetTransitGatewayConnectPeerAssociations",
				"networkmanager:GetTransitGatewayRegistrations",
				"opsworks-cm:Describe*",
				"opsworks-cm:List*",
				"opsworks:Describe*",
				"opsworks:Get*",
				"organizations:Describe*",
				"organizations:List*",
				"outposts:Get*",
				"outposts:List*",
				"personalize:Describe*",
				"personalize:Get*",
				"personalize:List*",
				"pi:DescribeDimensionKeys",
				"pi:GetDimensionKeyDetails",
				"pi:GetResourceMetadata",
				"pi:GetResourceMetrics",
				"pi:ListAvailableResourceDimensions",
				"pi:ListAvailableResourceMetrics",
				"polly:Describe*",
				"polly:Get*",
				"polly:List*",
				"polly:SynthesizeSpeech",
				"proton:GetEnvironment",
				"proton:GetEnvironmentTemplate",
				"proton:GetEnvironmentTemplateVersion",
				"proton:GetService",
				"proton:GetServiceInstance",
				"proton:GetServiceTemplate",
				"proton:GetServiceTemplateVersion",
				"proton:ListEnvironmentAccountConnections",
				"proton:ListEnvironments",
				"proton:ListEnvironmentTemplates",
				"proton:ListServiceInstances",
				"proton:ListServices",
				"proton:ListServiceTemplates",
				"proton:ListTagsForResource",
				"qldb:DescribeJournalS3Export",
				"qldb:DescribeLedger",
				"qldb:GetBlock",
				"qldb:GetDigest",
				"qldb:GetRevision",
				"qldb:ListJournalS3Exports",
				"qldb:ListJournalS3ExportsForLedger",
				"qldb:ListLedgers",
				"qldb:ListTagsForResource",
				"ram:Get*",
				"ram:List*",
				"rbin:GetRule",
				"rbin:ListRules",
				"rbin:ListTagsForResource",
				"rds:Describe*",
				"rds:Download*",
				"rds:List*",
				"redshift:Describe*",
				"redshift:GetReservedNodeExchangeOfferings",
				"redshift:View*",
				"rekognition:CompareFaces",
				"rekognition:Detect*",
				"rekognition:List*",
				"rekognition:Search*",
				"resiliencehub:DescribeApp",
				"resiliencehub:DescribeAppAssessment",
				"resiliencehub:DescribeAppVersionResourcesResolutionStatus",
				"resiliencehub:DescribeAppVersionTemplate",
				"resiliencehub:DescribeDraftAppVersionResourcesImportStatus",
				"resiliencehub:DescribeResiliencyPolicy",
				"resiliencehub:ListAlarmRecommendations",
				"resiliencehub:ListAppAssessments",
				"resiliencehub:ListAppComponentCompliances",
				"resiliencehub:ListAppComponentRecommendations",
				"resiliencehub:ListAppVersionResourceMappings",
				"resiliencehub:ListAppVersionResources",
				"resiliencehub:ListAppVersions",
				"resiliencehub:ListApps",
				"resiliencehub:ListRecommendationTemplates",
				"resiliencehub:ListResiliencyPolicies",
				"resiliencehub:ListSopRecommendations",
				"resiliencehub:ListSuggestedResiliencyPolicies",
				"resiliencehub:ListTagsForResource",
				"resiliencehub:ListTestRecommendations",
				"resiliencehub:ListUnsupportedAppVersionResources",
				"resource-groups:Get*",
				"resource-groups:List*",
				"resource-groups:Search*",
				"robomaker:BatchDescribe*",
				"robomaker:Describe*",
				"robomaker:Get*",
				"robomaker:List*",
				"route53-recovery-cluster:Get*",
				"route53-recovery-control-config:Describe*",
				"route53-recovery-control-config:List*",
				"route53-recovery-readiness:Get*",
				"route53-recovery-readiness:List*",
				"route53:Get*",
				"route53:List*",
				"route53:Test*",
				"route53domains:Check*",
				"route53domains:Get*",
				"route53domains:List*",
				"route53domains:View*",
				"route53resolver:Get*",
				"route53resolver:List*",
				"s3-object-lambda:GetObject",
				"s3-object-lambda:GetObjectAcl",
				"s3-object-lambda:GetObjectLegalHold",
				"s3-object-lambda:GetObjectRetention",
				"s3-object-lambda:GetObjectTagging",
				"s3-object-lambda:GetObjectVersion",
				"s3-object-lambda:GetObjectVersionAcl",
				"s3-object-lambda:GetObjectVersionTagging",
				"s3-object-lambda:ListBucket",
				"s3-object-lambda:ListBucketMultipartUploads",
				"s3-object-lambda:ListBucketVersions",
				"s3-object-lambda:ListMultipartUploadParts",
				"s3:DescribeJob",
				"s3:Get*",
				"s3:List*",
				"sagemaker:Describe*",
				"sagemaker:GetSearchSuggestions",
				"sagemaker:List*",
				"sagemaker:Search",
				"savingsplans:DescribeSavingsPlanRates",
				"savingsplans:DescribeSavingsPlans",
				"savingsplans:DescribeSavingsPlansOfferingRates",
				"savingsplans:DescribeSavingsPlansOfferings",
				"savingsplans:ListTagsForResource",
				"schemas:Describe*",
				"schemas:Get*",
				"schemas:List*",
				"schemas:Search*",
				"sdb:Get*",
				"sdb:List*",
				"sdb:Select*",
				"secretsmanager:Describe*",
				"secretsmanager:GetResourcePolicy",
				"secretsmanager:List*",
				"securityhub:Describe*",
				"securityhub:Get*",
				"securityhub:List*",
				"serverlessrepo:Get*",
				"serverlessrepo:List*",
				"serverlessrepo:SearchApplications",
				"servicecatalog:Describe*",
				"servicecatalog:GetApplication",
				"servicecatalog:GetAttributeGroup",
				"servicecatalog:List*",
				"servicecatalog:Scan*",
				"servicecatalog:Search*",
				"servicediscovery:Get*",
				"servicediscovery:List*",
				"servicequotas:GetAssociationForServiceQuotaTemplate",
				"servicequotas:GetAWSDefaultServiceQuota",
				"servicequotas:GetRequestedServiceQuotaChange",
				"servicequotas:GetServiceQuota",
				"servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
				"servicequotas:ListAWSDefaultServiceQuotas",
				"servicequotas:ListRequestedServiceQuotaChangeHistory",
				"servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
				"servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
				"servicequotas:ListServiceQuotas",
				"servicequotas:ListServices",
				"ses:Describe*",
				"ses:Get*",
				"ses:List*",
				"shield:Describe*",
				"shield:Get*",
				"shield:List*",
				"signer:DescribeSigningJob",
				"signer:GetSigningPlatform",
				"signer:GetSigningProfile",
				"signer:ListProfilePermissions",
				"signer:ListSigningJobs",
				"signer:ListSigningPlatforms",
				"signer:ListSigningProfiles",
				"signer:ListTagsForResource",
				"snowball:Describe*",
				"snowball:Get*",
				"snowball:List*",
				"sns:Check*",
				"sns:Get*",
				"sns:List*",
				"sqs:Get*",
				"sqs:List*",
				"sqs:Receive*",
				"ssm-contacts:DescribeEngagement",
				"ssm-contacts:DescribePage",
				"ssm-contacts:GetContact",
				"ssm-contacts:GetContactChannel",
				"ssm-contacts:ListContactChannels",
				"ssm-contacts:ListContacts",
				"ssm-contacts:ListEngagements",
				"ssm-contacts:ListPageReceipts",
				"ssm-contacts:ListPagesByContact",
				"ssm-contacts:ListPagesByEngagement",
				"ssm-incidents:GetIncidentRecord",
				"ssm-incidents:GetReplicationSet",
				"ssm-incidents:GetResourcePolicies",
				"ssm-incidents:GetResponsePlan",
				"ssm-incidents:GetTimelineEvent",
				"ssm-incidents:ListIncidentRecords",
				"ssm-incidents:ListRelatedItems",
				"ssm-incidents:ListReplicationSets",
				"ssm-incidents:ListResponsePlans",
				"ssm-incidents:ListTagsForResource",
				"ssm-incidents:ListTimelineEvents",
				"ssm:Describe*",
				"ssm:Get*",
				"ssm:List*",
				"sso-directory:Describe*",
				"sso-directory:List*",
				"sso-directory:Search*",
				"sso:Describe*",
				"sso:Get*",
				"sso:List*",
				"sso:Search*",
				"states:Describe*",
				"states:GetExecutionHistory",
				"states:List*",
				"storagegateway:Describe*",
				"storagegateway:List*",
				"sts:GetAccessKeyInfo",
				"sts:GetCallerIdentity",
				"sts:GetSessionToken",
				"support:DescribeCases",
				"swf:Count*",
				"swf:Describe*",
				"swf:Get*",
				"swf:List*",
				"synthetics:Describe*",
				"synthetics:Get*",
				"synthetics:List*",
				"tag:Get*",
				"timestream:DescribeDatabase",
				"timestream:DescribeEndpoints",
				"timestream:DescribeTable",
				"timestream:ListDatabases",
				"timestream:ListMeasures",
				"timestream:ListTables",
				"timestream:ListTagsForResource",
				"transcribe:Get*",
				"transcribe:List*",
				"transfer:Describe*",
				"transfer:List*",
				"transfer:TestIdentityProvider",
				"trustedadvisor:Describe*",
				"waf-regional:Get*",
				"waf-regional:List*",
				"waf:Get*",
				"waf:List*",
				"wafv2:CheckCapacity",
				"wafv2:Describe*",
				"wafv2:Get*",
				"wafv2:List*",
				"workdocs:CheckAlias",
				"workdocs:Describe*",
				"workdocs:Get*",
				"worklink:Describe*",
				"worklink:List*",
				"workmail:Describe*",
				"workmail:Get*",
				"workmail:List*",
				"workmail:Search*",
				"workspaces:Describe*",
				"xray:BatchGet*",
				"xray:Get*"
			],
			"Resource": "*"
		}
	]
}