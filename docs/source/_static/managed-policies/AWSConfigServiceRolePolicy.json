{
	"Version": "2012-10-17",
	"Statement": [
		{
			"Effect": "Allow",
			"Action": [
				"access-analyzer:GetAnalyzer",
				"access-analyzer:GetArchiveRule",
				"access-analyzer:ListAnalyzers",
				"access-analyzer:ListArchiveRules",
				"access-analyzer:ListTagsForResource",
				"account:GetAlternateContact",
				"acm:DescribeCertificate",
				"acm:ListCertificates",
				"acm:ListTagsForCertificate",
				"amplifyuibuilder:ExportThemes",
				"amplifyuibuilder:GetTheme",
				"apigateway:GET",
				"appconfig:GetApplication",
				"appconfig:GetConfigurationProfile",
				"appconfig:GetDeployment",
				"appconfig:GetDeploymentStrategy",
				"appconfig:GetEnvironment",
				"appconfig:GetHostedConfigurationVersion",
				"appconfig:ListApplications",
				"appconfig:ListTagsForResource",
				"appflow:DescribeConnectorProfiles",
				"application-autoscaling:DescribeScalableTargets",
				"application-autoscaling:DescribeScalingPolicies",
				"appsync:GetApiCache",
				"appsync:GetGraphqlApi",
				"appsync:ListGraphqlApis",
				"athena:GetDataCatalog",
				"athena:GetWorkGroup",
				"athena:ListDataCatalogs",
				"athena:ListTagsForResource",
				"athena:ListWorkGroups",
				"autoscaling-plans:DescribeScalingPlanResources",
				"autoscaling-plans:DescribeScalingPlans",
				"autoscaling-plans:GetScalingPlanResourceForecastData",
				"autoscaling:DescribeAutoScalingGroups",
				"autoscaling:DescribeLaunchConfigurations",
				"autoscaling:DescribeLifecycleHooks",
				"autoscaling:DescribePolicies",
				"autoscaling:DescribeScheduledActions",
				"autoscaling:DescribeTags",
				"autoscaling:DescribeWarmPool",
				"backup-gateway:ListTagsForResource",
				"backup-gateway:ListVirtualMachines",
				"backup:DescribeBackupVault",
				"backup:DescribeFramework",
				"backup:DescribeRecoveryPoint",
				"backup:DescribeReportPlan",
				"backup:GetBackupPlan",
				"backup:GetBackupSelection",
				"backup:GetBackupVaultAccessPolicy",
				"backup:GetBackupVaultNotifications",
				"backup:ListBackupPlans",
				"backup:ListBackupSelections",
				"backup:ListBackupVaults",
				"backup:ListFrameworks",
				"backup:ListRecoveryPointsByBackupVault",
				"backup:ListReportPlans",
				"backup:ListTags",
				"batch:DescribeComputeEnvironments",
				"batch:DescribeJobQueues",
				"batch:ListTagsForResource",
				"billingconductor:ListAccountAssociations",
				"billingconductor:ListBillingGroups",
				"billingconductor:ListCustomLineItems",
				"billingconductor:ListPricingPlans",
				"billingconductor:ListPricingRules",
				"billingconductor:ListPricingRulesAssociatedToPricingPlan",
				"billingconductor:ListTagsForResource",
				"budgets:DescribeBudgetAction",
				"budgets:DescribeBudgetActionsForAccount",
				"budgets:DescribeBudgetActionsForBudget",
				"budgets:ViewBudget",
				"ce:GetAnomalyMonitors",
				"ce:GetAnomalySubscriptions",
				"cloud9:DescribeEnvironmentMemberships",
				"cloud9:DescribeEnvironments",
				"cloud9:ListEnvironments",
				"cloud9:ListTagsForResource",
				"cloudformation:DescribeType",
				"cloudformation:GetResource",
				"cloudformation:ListResources",
				"cloudformation:ListTypes",
				"cloudfront:ListDistributions",
				"cloudfront:ListTagsForResource",
				"cloudtrail:DescribeTrails",
				"cloudtrail:GetEventDataStore",
				"cloudtrail:GetEventSelectors",
				"cloudtrail:GetTrailStatus",
				"cloudtrail:ListEventDataStores",
				"cloudtrail:ListTags",
				"cloudwatch:DescribeAlarms",
				"cloudwatch:GetMetricStream",
				"cloudwatch:ListMetricStreams",
				"codedeploy:GetDeploymentConfig",
				"codepipeline:GetPipeline",
				"codepipeline:GetPipelineState",
				"codepipeline:ListPipelines",
				"config:BatchGet*",
				"config:Describe*",
				"config:Get*",
				"config:List*",
				"config:Put*",
				"config:Select*",
				"datasync:DescribeAgent",
				"datasync:DescribeLocationEfs",
				"datasync:DescribeLocationFsxLustre",
				"datasync:DescribeLocationFsxWindows",
				"datasync:DescribeLocationHdfs",
				"datasync:DescribeLocationNfs",
				"datasync:DescribeLocationObjectStorage",
				"datasync:DescribeLocationS3",
				"datasync:DescribeLocationSmb",
				"datasync:DescribeTask",
				"datasync:ListAgents",
				"datasync:ListLocations",
				"datasync:ListTagsForResource",
				"datasync:ListTasks",
				"dax:DescribeClusters",
				"dax:DescribeParameterGroups",
				"dax:DescribeParameters",
				"dax:DescribeSubnetGroups",
				"dax:ListTags",
				"detective:ListGraphs",
				"detective:ListTagsForResource",
				"devops-guru:GetResourceCollection",
				"dms:DescribeCertificates",
				"dms:DescribeEventSubscriptions",
				"dms:DescribeReplicationInstances",
				"dms:DescribeReplicationSubnetGroups",
				"dms:DescribeReplicationTasks",
				"dms:ListTagsForResource",
				"ds:DescribeDirectories",
				"dynamodb:DescribeContinuousBackups",
				"dynamodb:DescribeGlobalTable",
				"dynamodb:DescribeGlobalTableSettings",
				"dynamodb:DescribeLimits",
				"dynamodb:DescribeTable",
				"dynamodb:ListTables",
				"dynamodb:ListTagsOfResource",
				"ec2:Describe*",
				"ec2:DescribeClientVpnAuthorizationRules",
				"ec2:DescribeClientVpnEndpoints",
				"ec2:DescribeDhcpOptions",
				"ec2:DescribeFleets",
				"ec2:DescribeNetworkAcls",
				"ec2:DescribePlacementGroups",
				"ec2:DescribeSpotFleetRequests",
				"ec2:DescribeTrafficMirrorFilters",
				"ec2:DescribeTrafficMirrorTargets",
				"ec2:DescribeVolumeAttribute",
				"ec2:DescribeVolumes",
				"ec2:GetEbsEncryptionByDefault",
				"ec2:GetNetworkInsightsAccessScopeAnalysisFindings",
				"ec2:GetNetworkInsightsAccessScopeContent",
				"ecr-public:DescribeRepositories",
				"ecr-public:GetRepositoryCatalogData",
				"ecr-public:GetRepositoryPolicy",
				"ecr-public:ListTagsForResource",
				"ecr:DescribePullThroughCacheRules",
				"ecr:DescribeRegistry",
				"ecr:DescribeRepositories",
				"ecr:GetLifecyclePolicy",
				"ecr:GetRegistryPolicy",
				"ecr:GetRepositoryPolicy",
				"ecr:ListTagsForResource",
				"ecs:DescribeClusters",
				"ecs:DescribeServices",
				"ecs:DescribeTaskDefinition",
				"ecs:DescribeTaskSets",
				"ecs:ListClusters",
				"ecs:ListServices",
				"ecs:ListTagsForResource",
				"ecs:ListTaskDefinitionFamilies",
				"ecs:ListTaskDefinitions",
				"eks:DescribeCluster",
				"eks:DescribeFargateProfile",
				"eks:DescribeNodegroup",
				"eks:ListClusters",
				"eks:ListFargateProfiles",
				"eks:ListNodegroups",
				"eks:ListTagsForResource",
				"elasticache:DescribeCacheClusters",
				"elasticache:DescribeCacheParameterGroups",
				"elasticache:DescribeCacheParameters",
				"elasticache:DescribeCacheSubnetGroups",
				"elasticache:DescribeReplicationGroups",
				"elasticache:DescribeSnapshots",
				"elasticache:ListTagsForResource",
				"elasticbeanstalk:DescribeConfigurationSettings",
				"elasticbeanstalk:DescribeEnvironments",
				"elasticfilesystem:DescribeAccessPoints",
				"elasticfilesystem:DescribeBackupPolicy",
				"elasticfilesystem:DescribeFileSystemPolicy",
				"elasticfilesystem:DescribeFileSystems",
				"elasticfilesystem:DescribeLifecycleConfiguration",
				"elasticfilesystem:DescribeMountTargets",
				"elasticfilesystem:DescribeMountTargetSecurityGroups",
				"elasticloadbalancing:DescribeListenerCertificates",
				"elasticloadbalancing:DescribeListeners",
				"elasticloadbalancing:DescribeLoadBalancerAttributes",
				"elasticloadbalancing:DescribeLoadBalancerPolicies",
				"elasticloadbalancing:DescribeLoadBalancers",
				"elasticloadbalancing:DescribeRules",
				"elasticloadbalancing:DescribeTags",
				"elasticloadbalancing:DescribeTargetGroupAttributes",
				"elasticloadbalancing:DescribeTargetGroups",
				"elasticloadbalancing:DescribeTargetHealth",
				"elasticmapreduce:DescribeCluster",
				"elasticmapreduce:DescribeSecurityConfiguration",
				"elasticmapreduce:DescribeStep",
				"elasticmapreduce:DescribeStudio",
				"elasticmapreduce:GetBlockPublicAccessConfiguration",
				"elasticmapreduce:GetManagedScalingPolicy",
				"elasticmapreduce:GetStudioSessionMapping",
				"elasticmapreduce:ListClusters",
				"elasticmapreduce:ListInstanceFleets",
				"elasticmapreduce:ListInstanceGroups",
				"elasticmapreduce:ListInstances",
				"elasticmapreduce:ListSecurityConfigurations",
				"elasticmapreduce:ListSteps",
				"elasticmapreduce:ListStudios",
				"elasticmapreduce:ListStudioSessionMappings",
				"es:DescribeDomain",
				"es:DescribeDomains",
				"es:DescribeElasticsearchDomain",
				"es:DescribeElasticsearchDomains",
				"es:GetCompatibleElasticsearchVersions",
				"es:GetCompatibleVersions",
				"es:ListDomainNames",
				"es:ListTags",
				"events:DescribeApiDestination",
				"events:DescribeArchive",
				"events:DescribeEndpoint",
				"events:DescribeEventBus",
				"events:DescribeRule",
				"events:ListArchives",
				"events:ListEndpoints",
				"events:ListEventBuses",
				"events:ListRules",
				"events:ListTagsForResource",
				"events:ListTargetsByRule",
				"finspace:GetEnvironment",
				"finspace:ListEnvironments",
				"firehose:DescribeDeliveryStream",
				"firehose:ListDeliveryStreams",
				"firehose:ListTagsForDeliveryStream",
				"fms:GetNotificationChannel",
				"fms:GetPolicy",
				"fms:ListPolicies",
				"fms:ListTagsForResource",
				"frauddetector:GetDetectors",
				"frauddetector:GetDetectorVersion",
				"frauddetector:GetEntityTypes",
				"frauddetector:GetEventTypes",
				"frauddetector:GetExternalModels",
				"frauddetector:GetLabels",
				"frauddetector:GetModels",
				"frauddetector:GetOutcomes",
				"frauddetector:GetVariables",
				"frauddetector:ListTagsForResource",
				"fsx:DescribeFileSystems",
				"fsx:DescribeVolumes",
				"fsx:ListTagsForResource",
				"gamelift:DescribeMatchmakingRuleSets",
				"gamelift:DescribeAlias",
				"gamelift:DescribeBuild",
				"gamelift:DescribeFleetAttributes",
				"gamelift:DescribeFleetCapacity",
				"gamelift:DescribeFleetLocationAttributes",
				"gamelift:DescribeFleetLocationCapacity",
				"gamelift:DescribeFleetPortSettings",
				"gamelift:DescribeGameServerGroup",
				"gamelift:DescribeGameSessionQueues",
				"gamelift:DescribeMatchmakingConfigurations",
				"gamelift:DescribeRuntimeConfiguration",
				"gamelift:DescribeScript",
				"gamelift:DescribeVpcPeeringAuthorizations",
				"gamelift:ListAliases",
				"gamelift:ListBuilds",
				"gamelift:ListFleets",
				"gamelift:ListGameServerGroups",
				"gamelift:ListScripts",
				"gamelift:ListTagsForResource",
				"geo:DescribeGeofenceCollection",
				"geo:DescribeMap",
				"geo:DescribePlaceIndex",
				"geo:DescribeRouteCalculator",
				"geo:DescribeTracker",
				"geo:ListMaps",
				"geo:ListTrackerConsumers",
				"globalaccelerator:DescribeAccelerator",
				"globalaccelerator:DescribeEndpointGroup",
				"globalaccelerator:DescribeListener",
				"globalaccelerator:ListAccelerators",
				"globalaccelerator:ListEndpointGroups",
				"globalaccelerator:ListListeners",
				"globalaccelerator:ListTagsForResource",
				"glue:BatchGetDevEndpoints",
				"glue:BatchGetJobs",
				"glue:BatchGetWorkflows",
				"glue:GetClassifier",
				"glue:GetClassifiers",
				"glue:GetCrawler",
				"glue:GetCrawlers",
				"glue:GetDevEndpoint",
				"glue:GetDevEndpoints",
				"glue:GetJob",
				"glue:GetJobs",
				"glue:GetSecurityConfiguration",
				"glue:GetSecurityConfigurations",
				"glue:GetTable",
				"glue:GetTags",
				"glue:GetWorkflow",
				"glue:ListCrawlers",
				"glue:ListDevEndpoints",
				"glue:ListJobs",
				"glue:ListWorkflows",
				"guardduty:GetDetector",
				"guardduty:GetFilter",
				"guardduty:GetFindings",
				"guardduty:GetIPSet",
				"guardduty:GetMasterAccount",
				"guardduty:GetMembers",
				"guardduty:GetThreatIntelSet",
				"guardduty:ListDetectors",
				"guardduty:ListFilters",
				"guardduty:ListFindings",
				"guardduty:ListIPSets",
				"guardduty:ListMembers",
				"guardduty:ListOrganizationAdminAccounts",
				"guardduty:ListTagsForResource",
				"guardduty:ListThreatIntelSets",
				"iam:GenerateCredentialReport",
				"iam:GetAccountAuthorizationDetails",
				"iam:GetAccountPasswordPolicy",
				"iam:GetAccountSummary",
				"iam:GetCredentialReport",
				"iam:GetGroup",
				"iam:GetGroupPolicy",
				"iam:GetPolicy",
				"iam:GetPolicyVersion",
				"iam:GetRole",
				"iam:GetRolePolicy",
				"iam:GetUser",
				"iam:GetUserPolicy",
				"iam:ListAttachedGroupPolicies",
				"iam:ListAttachedRolePolicies",
				"iam:ListAttachedUserPolicies",
				"iam:ListEntitiesForPolicy",
				"iam:ListGroupPolicies",
				"iam:ListGroupsForUser",
				"iam:ListInstanceProfilesForRole",
				"iam:ListPolicyVersions",
				"iam:ListRolePolicies",
				"iam:ListUserPolicies",
				"iam:ListVirtualMFADevices",
				"imagebuilder:GetComponent",
				"imagebuilder:GetContainerRecipe",
				"imagebuilder:GetDistributionConfiguration",
				"imagebuilder:GetImage",
				"imagebuilder:GetImagePipeline",
				"imagebuilder:GetImageRecipe",
				"imagebuilder:GetInfrastructureConfiguration",
				"imagebuilder:ListComponentBuildVersions",
				"imagebuilder:ListComponents",
				"imagebuilder:ListContainerRecipes",
				"imagebuilder:ListDistributionConfigurations",
				"imagebuilder:ListImageBuildVersions",
				"imagebuilder:ListImagePipelines",
				"imagebuilder:ListImageRecipes",
				"imagebuilder:ListImages",
				"imagebuilder:ListInfrastructureConfigurations",
				"iot:DescribeCertificate",
				"iot:DescribeDimension",
				"iot:DescribeRoleAlias",
				"iot:DescribeSecurityProfile",
				"iot:GetPolicy",
				"iot:GetTopicRule",
				"iot:GetTopicRuleDestination",
				"iot:ListCertificates",
				"iot:ListDimensions",
				"iot:ListPolicies",
				"iot:ListRoleAliases",
				"iot:ListSecurityProfiles",
				"iot:ListSecurityProfilesForTarget",
				"iot:ListTagsForResource",
				"iot:ListTargetsForSecurityProfile",
				"iot:ListTopicRuleDestinations",
				"iot:ListTopicRules",
				"iot:ListV2LoggingLevels",
				"iot:ValidateSecurityProfileBehaviors",
				"iotanalytics:DescribeChannel",
				"iotanalytics:DescribeDataset",
				"iotanalytics:DescribeDatastore",
				"iotanalytics:DescribePipeline",
				"iotanalytics:ListChannels",
				"iotanalytics:ListDatasets",
				"iotanalytics:ListDatastores",
				"iotanalytics:ListPipelines",
				"iotanalytics:ListTagsForResource",
				"iotevents:DescribeAlarmModel",
				"iotevents:DescribeDetectorModel",
				"iotevents:DescribeInput",
				"iotevents:ListAlarmModels",
				"iotevents:ListDetectorModels",
				"iotevents:ListInputs",
				"iotevents:ListTagsForResource",
				"iotsitewise:DescribeAccessPolicy",
				"iotsitewise:DescribeAsset",
				"iotsitewise:ListAccessPolicies",
				"iotsitewise:ListAssets",
				"iottwinmaker:GetEntity",
				"iottwinmaker:GetScene",
				"iottwinmaker:GetWorkspace",
				"iottwinmaker:ListEntities",
				"iottwinmaker:ListScenes",
				"iottwinmaker:ListTagsForResource",
				"iottwinmaker:ListWorkspaces",
				"ivs:GetPlaybackKeyPair",
				"ivs:GetRecordingConfiguration",
				"ivs:GetStreamKey",
				"ivs:ListChannels",
				"ivs:ListPlaybackKeyPairs",
				"ivs:ListRecordingConfigurations",
				"ivs:ListStreamKeys",
				"ivs:ListTagsForResource",
				"kafka:DescribeCluster",
				"kafka:DescribeClusterV2",
				"kafka:ListClusters",
				"kafka:ListClustersV2",
				"kinesis:DescribeStreamConsumer",
				"kinesis:DescribeStreamSummary",
				"kinesis:ListStreamConsumers",
				"kinesis:ListStreams",
				"kinesis:ListTagsForStream",
				"kinesisanalytics:DescribeApplication",
				"kinesisanalytics:ListApplications",
				"kinesisanalytics:ListTagsForResource",
				"kms:DescribeKey",
				"kms:GetKeyPolicy",
				"kms:GetKeyRotationStatus",
				"kms:ListAliases",
				"kms:ListKeys",
				"kms:ListResourceTags",
				"lakeformation:DescribeResource",
				"lakeformation:GetDataLakeSettings",
				"lakeformation:ListPermissions",
				"lakeformation:ListResources",
				"lambda:GetAlias",
				"lambda:GetFunction",
				"lambda:GetFunctionCodeSigningConfig",
				"lambda:GetPolicy",
				"lambda:ListAliases",
				"lambda:ListFunctions",
				"lambda:ListVersionsByFunction",
				"lex:DescribeBot",
				"lex:DescribeBotAlias",
				"lex:DescribeResourcePolicy",
				"lex:ListBotAliases",
				"lex:ListBotLocales",
				"lex:ListBots",
				"lex:ListTagsForResource",
				"license-manager:GetGrant",
				"license-manager:GetLicense",
				"license-manager:ListDistributedGrants",
				"license-manager:ListLicenses",
				"license-manager:ListReceivedGrants",
				"lightsail:GetAlarms",
				"lightsail:GetBuckets",
				"lightsail:GetCertificates",
				"lightsail:GetDisk",
				"lightsail:GetDisks",
				"lightsail:GetInstance",
				"lightsail:GetInstances",
				"lightsail:GetKeyPair",
				"lightsail:GetLoadBalancer",
				"lightsail:GetLoadBalancers",
				"lightsail:GetLoadBalancerTlsCertificates",
				"lightsail:GetStaticIp",
				"lightsail:GetStaticIps",
				"logs:DescribeLogGroups",
				"logs:ListTagsLogGroup",
				"lookoutequipment:DescribeInferenceScheduler",
				"lookoutequipment:ListTagsForResource",
				"lookoutmetrics:DescribeAlert",
				"lookoutmetrics:DescribeAnomalyDetector",
				"lookoutmetrics:ListAlerts",
				"lookoutmetrics:ListAnomalyDetectors",
				"lookoutmetrics:ListMetricSets",
				"lookoutmetrics:ListTagsForResource",
				"lookoutvision:DescribeProject",
				"lookoutvision:ListProjects",
				"macie2:GetMacieSession",
				"managedblockchain:GetMember",
				"managedblockchain:GetNetwork",
				"managedblockchain:GetNode",
				"managedblockchain:ListInvitations",
				"managedblockchain:ListMembers",
				"managedblockchain:ListNodes",
				"mediapackage-vod:DescribePackagingGroup",
				"mediapackage-vod:ListPackagingGroups",
				"mediapackage-vod:ListTagsForResource",
				"mobiletargeting:GetInAppTemplate",
				"mobiletargeting:ListTemplates",
				"mq:DescribeBroker",
				"mq:ListBrokers",
				"network-firewall:DescribeLoggingConfiguration",
				"network-firewall:ListFirewalls",
				"nimble:GetLaunchProfile",
				"nimble:GetLaunchProfileDetails",
				"nimble:GetStreamingImage",
				"nimble:GetStudio",
				"nimble:GetStudioComponent",
				"nimble:ListLaunchProfiles",
				"nimble:ListStreamingImages",
				"nimble:ListStudioComponents",
				"nimble:ListStudios",
				"opsworks:DescribeLayers",
				"opsworks:ListTags",
				"organizations:DescribeOrganization",
				"organizations:DescribePolicy",
				"organizations:ListParents",
				"organizations:ListPolicies",
				"organizations:ListPoliciesForTarget",
				"profile:GetDomain",
				"profile:GetIntegration",
				"profile:GetProfileObjectType",
				"profile:ListDomains",
				"profile:ListIntegrations",
				"profile:ListProfileObjectTypes",
				"profile:ListTagsForResource",
				"quicksight:DescribeAnalysis",
				"quicksight:DescribeAnalysisPermissions",
				"quicksight:DescribeDataSet",
				"quicksight:DescribeDataSetPermissions",
				"quicksight:DescribeDataSource",
				"quicksight:DescribeDataSourcePermissions",
				"quicksight:DescribeTheme",
				"quicksight:DescribeThemePermissions",
				"quicksight:ListAnalyses",
				"quicksight:ListDataSets",
				"quicksight:ListTagsForResource",
				"quicksight:ListThemes",
				"ram:GetResourceShareAssociations",
				"ram:GetResourceShares",
				"rds:DescribeDBClusterParameterGroups",
				"rds:DescribeDBClusterParameters",
				"rds:DescribeDBClusters",
				"rds:DescribeDBClusterSnapshotAttributes",
				"rds:DescribeDBClusterSnapshots",
				"rds:DescribeDBEngineVersions",
				"rds:DescribeDBInstances",
				"rds:DescribeDBParameterGroups",
				"rds:DescribeDBParameters",
				"rds:DescribeDBSecurityGroups",
				"rds:DescribeDBSnapshotAttributes",
				"rds:DescribeDBSnapshots",
				"rds:DescribeDBSubnetGroups",
				"rds:DescribeEventSubscriptions",
				"rds:DescribeOptionGroups",
				"rds:ListTagsForResource",
				"redshift:DescribeClusterParameterGroups",
				"redshift:DescribeClusterParameters",
				"redshift:DescribeClusters",
				"redshift:DescribeClusterSecurityGroups",
				"redshift:DescribeClusterSnapshots",
				"redshift:DescribeClusterSubnetGroups",
				"redshift:DescribeEventSubscriptions",
				"redshift:DescribeLoggingStatus",
				"rekognition:DescribeStreamProcessor",
				"rekognition:ListTagsForResource",
				"resiliencehub:DescribeApp",
				"resiliencehub:DescribeAppVersionTemplate",
				"resiliencehub:DescribeResiliencyPolicy",
				"resiliencehub:ListApps",
				"resiliencehub:ListAppVersionResourceMappings",
				"resiliencehub:ListResiliencyPolicies",
				"robomaker:DescribeRobotApplication",
				"robomaker:DescribeSimulationApplication",
				"route53-recovery-readiness:GetCell",
				"route53-recovery-readiness:GetReadinessCheck",
				"route53-recovery-readiness:GetRecoveryGroup",
				"route53-recovery-readiness:GetResourceSet",
				"route53-recovery-readiness:ListCells",
				"route53-recovery-readiness:ListReadinessChecks",
				"route53-recovery-readiness:ListRecoveryGroups",
				"route53-recovery-readiness:ListResourceSets",
				"route53:GetHealthCheck",
				"route53:GetHostedZone",
				"route53:ListHealthChecks",
				"route53:ListHostedZones",
				"route53:ListHostedZonesByName",
				"route53:ListQueryLoggingConfigs",
				"route53:ListResourceRecordSets",
				"route53:ListTagsForResource",
				"route53resolver:GetFirewallDomainList",
				"route53resolver:GetFirewallRuleGroup",
				"route53resolver:GetFirewallRuleGroupAssociation",
				"route53resolver:GetResolverEndpoint",
				"route53resolver:GetResolverQueryLogConfig",
				"route53resolver:GetResolverRule",
				"route53resolver:GetResolverRuleAssociation",
				"route53resolver:ListFirewallDomainLists",
				"route53resolver:ListFirewallDomains",
				"route53resolver:ListFirewallRuleGroupAssociations",
				"route53resolver:ListFirewallRuleGroups",
				"route53resolver:ListFirewallRules",
				"route53resolver:ListResolverEndpointIpAddresses",
				"route53resolver:ListResolverEndpoints",
				"route53resolver:ListResolverQueryLogConfigs",
				"route53resolver:ListResolverRuleAssociations",
				"route53resolver:ListResolverRules",
				"route53resolver:ListTagsForResource",
				"rum:GetAppMonitor",
				"rum:GetAppMonitorData",
				"rum:ListAppMonitors",
				"rum:ListTagsForResource",
				"s3-outposts:GetAccessPoint",
				"s3-outposts:GetAccessPointPolicy",
				"s3-outposts:GetBucket",
				"s3-outposts:GetBucketPolicy",
				"s3-outposts:GetBucketTagging",
				"s3-outposts:GetLifecycleConfiguration",
				"s3-outposts:ListAccessPoints",
				"s3-outposts:ListEndpoints",
				"s3-outposts:ListRegionalBuckets",
				"s3:GetAccelerateConfiguration",
				"s3:GetAccessPoint",
				"s3:GetAccessPointPolicy",
				"s3:GetAccessPointPolicyStatus",
				"s3:GetAccountPublicAccessBlock",
				"s3:GetBucketAcl",
				"s3:GetBucketCORS",
				"s3:GetBucketLocation",
				"s3:GetBucketLogging",
				"s3:GetBucketNotification",
				"s3:GetBucketObjectLockConfiguration",
				"s3:GetBucketPolicy",
				"s3:GetBucketPublicAccessBlock",
				"s3:GetBucketRequestPayment",
				"s3:GetBucketTagging",
				"s3:GetBucketVersioning",
				"s3:GetBucketWebsite",
				"s3:GetEncryptionConfiguration",
				"s3:GetLifecycleConfiguration",
				"s3:GetReplicationConfiguration",
				"s3:GetStorageLensConfiguration",
				"s3:GetStorageLensConfigurationTagging",
				"s3:ListAccessPoints",
				"s3:ListAllMyBuckets",
				"s3:ListBucket",
				"sagemaker:DescribeCodeRepository",
				"sagemaker:DescribeEndpoint",
				"sagemaker:DescribeEndpointConfig",
				"sagemaker:DescribeModel",
				"sagemaker:DescribeMonitoringSchedule",
				"sagemaker:DescribeNotebookInstance",
				"sagemaker:DescribeNotebookInstanceLifecycleConfig",
				"sagemaker:DescribeWorkteam",
				"sagemaker:ListCodeRepositories",
				"sagemaker:ListEndpointConfigs",
				"sagemaker:ListEndpoints",
				"sagemaker:ListModels",
				"sagemaker:ListMonitoringSchedules",
				"sagemaker:ListNotebookInstanceLifecycleConfigs",
				"sagemaker:ListNotebookInstances",
				"sagemaker:ListTags",
				"sagemaker:ListWorkteams",
				"schemas:DescribeDiscoverer",
				"schemas:DescribeRegistry",
				"schemas:DescribeSchema",
				"schemas:ListDiscoverers",
				"schemas:ListRegistries",
				"schemas:ListSchemas",
				"sdb:GetAttributes",
				"sdb:ListDomains",
				"secretsmanager:ListSecrets",
				"secretsmanager:ListSecretVersionIds",
				"securityhub:DescribeHub",
				"servicediscovery:GetInstance",
				"servicediscovery:GetNamespace",
				"servicediscovery:GetService",
				"servicediscovery:ListNamespaces",
				"servicediscovery:ListServices",
				"servicediscovery:ListTagsForResource",
				"ses:DescribeReceiptRule",
				"ses:DescribeReceiptRuleSet",
				"ses:GetConfigurationSet",
				"ses:GetConfigurationSetEventDestinations",
				"ses:GetContactList",
				"ses:GetEmailTemplate",
				"ses:GetTemplate",
				"ses:ListConfigurationSets",
				"ses:ListContactLists",
				"ses:ListEmailTemplates",
				"ses:ListReceiptFilters",
				"ses:ListReceiptRuleSets",
				"ses:ListTemplates",
				"shield:DescribeDRTAccess",
				"shield:DescribeProtection",
				"shield:DescribeSubscription",
				"signer:GetSigningProfile",
				"signer:ListProfilePermissions",
				"signer:ListSigningProfiles",
				"sns:GetSubscriptionAttributes",
				"sns:GetTopicAttributes",
				"sns:ListSubscriptions",
				"sns:ListSubscriptionsByTopic",
				"sns:ListTagsForResource",
				"sns:ListTopics",
				"sqs:GetQueueAttributes",
				"sqs:ListQueues",
				"sqs:ListQueueTags",
				"ssm:DescribeAutomationExecutions",
				"ssm:DescribeDocument",
				"ssm:DescribeDocumentPermission",
				"ssm:GetAutomationExecution",
				"ssm:GetDocument",
				"ssm:ListDocuments",
				"sso:DescribeInstanceAccessControlAttributeConfiguration",
				"sso:DescribePermissionSet",
				"sso:GetInlinePolicyForPermissionSet",
				"sso:ListManagedPoliciesInPermissionSet",
				"sso:ListPermissionSets",
				"sso:ListTagsForResource",
				"states:DescribeActivity",
				"states:DescribeStateMachine",
				"states:ListActivities",
				"states:ListStateMachines",
				"states:ListTagsForResource",
				"storagegateway:ListGateways",
				"storagegateway:ListTagsForResource",
				"storagegateway:ListVolumes",
				"support:DescribeCases",
				"synthetics:DescribeCanaries",
				"synthetics:DescribeCanariesLastRun",
				"synthetics:DescribeRuntimeVersions",
				"synthetics:GetCanary",
				"synthetics:GetCanaryRuns",
				"synthetics:ListTagsForResource",
				"tag:GetResources",
				"timestream:DescribeDatabase",
				"timestream:DescribeTable",
				"timestream:ListDatabases",
				"timestream:ListTables",
				"timestream:ListTagsForResource",
				"transfer:DescribeServer",
				"transfer:DescribeUser",
				"transfer:DescribeWorkflow",
				"transfer:ListServers",
				"transfer:ListUsers",
				"transfer:ListWorkflows",
				"voiceid:DescribeDomain",
				"voiceid:ListTagsForResource",
				"waf-regional:GetLoggingConfiguration",
				"waf-regional:GetWebACL",
				"waf-regional:GetWebACLForResource",
				"waf:GetLoggingConfiguration",
				"waf:GetWebACL",
				"wafv2:GetLoggingConfiguration",
				"wafv2:GetRuleGroup",
				"wafv2:ListRuleGroups",
				"wafv2:ListTagsForResource",
				"workspaces:DescribeConnectionAliases",
				"workspaces:DescribeTags",
				"workspaces:DescribeWorkspaces"
			],
			"Resource": "*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"logs:CreateLogStream",
				"logs:CreateLogGroup"
			],
			"Resource": "arn:aws:logs:*:*:log-group:/aws/config/*"
		},
		{
			"Effect": "Allow",
			"Action": "logs:PutLogEvents",
			"Resource": "arn:aws:logs:*:*:log-group:/aws/config/*:log-stream:config-rule-evaluation/*"
		}
	]
}