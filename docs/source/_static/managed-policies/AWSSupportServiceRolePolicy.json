{
	"Statement": [
		{
			"Action": [
				"apigateway:GET"
			],
			"Effect": "Allow",
			"Resource": [
				"arn:aws:apigateway:*::/account",
				"arn:aws:apigateway:*::/apis",
				"arn:aws:apigateway:*::/apis/*",
				"arn:aws:apigateway:*::/apis/*/authorizers",
				"arn:aws:apigateway:*::/apis/*/authorizers/*",
				"arn:aws:apigateway:*::/apis/*/deployments",
				"arn:aws:apigateway:*::/apis/*/deployments/*",
				"arn:aws:apigateway:*::/apis/*/integrations",
				"arn:aws:apigateway:*::/apis/*/integrations/*",
				"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
				"arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
				"arn:aws:apigateway:*::/apis/*/models",
				"arn:aws:apigateway:*::/apis/*/models/*",
				"arn:aws:apigateway:*::/apis/*/routes",
				"arn:aws:apigateway:*::/apis/*/routes/*",
				"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
				"arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
				"arn:aws:apigateway:*::/apis/*/stages",
				"arn:aws:apigateway:*::/apis/*/stages/*",
				"arn:aws:apigateway:*::/clientcertificates",
				"arn:aws:apigateway:*::/clientcertificates/*",
				"arn:aws:apigateway:*::/domainnames",
				"arn:aws:apigateway:*::/domainnames/*",
				"arn:aws:apigateway:*::/domainnames/*/apimappings",
				"arn:aws:apigateway:*::/domainnames/*/apimappings/*",
				"arn:aws:apigateway:*::/domainnames/*/basepathmappings",
				"arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
				"arn:aws:apigateway:*::/restapis",
				"arn:aws:apigateway:*::/restapis/*",
				"arn:aws:apigateway:*::/restapis/*/authorizers",
				"arn:aws:apigateway:*::/restapis/*/authorizers/*",
				"arn:aws:apigateway:*::/restapis/*/deployments",
				"arn:aws:apigateway:*::/restapis/*/deployments/*",
				"arn:aws:apigateway:*::/restapis/*/models",
				"arn:aws:apigateway:*::/restapis/*/models/*",
				"arn:aws:apigateway:*::/restapis/*/models/*/default_template",
				"arn:aws:apigateway:*::/restapis/*/resources",
				"arn:aws:apigateway:*::/restapis/*/resources/*",
				"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
				"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
				"arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
				"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
				"arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
				"arn:aws:apigateway:*::/restapis/*/stages",
				"arn:aws:apigateway:*::/restapis/*/stages/*"
			]
		},
		{
			"Action": [
				"iam:DeleteRole"
			],
			"Effect": "Allow",
			"Resource": [
				"arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
			]
		},
		{
			"Action": [
				"a4b:getDevice",
				"a4b:getProfile",
				"a4b:getRoom",
				"a4b:getRoomSkillParameter",
				"a4b:getSkillGroup",
				"a4b:searchDevices",
				"a4b:searchProfiles",
				"a4b:searchRooms",
				"a4b:searchSkillGroups",
				"access-analyzer:getFinding",
				"access-analyzer:listAnalyzers",
				"access-analyzer:listArchiveRules",
				"access-analyzer:listFindings",
				"acm-pca:describeCertificateAuthority",
				"acm-pca:describeCertificateAuthorityAuditReport",
				"acm-pca:getCertificate",
				"acm-pca:getCertificateAuthorityCertificate",
				"acm-pca:getCertificateAuthorityCsr",
				"acm-pca:listCertificateAuthorities",
				"acm-pca:listTags",
				"acm:describeCertificate",
				"acm:getCertificate",
				"acm:listCertificates",
				"acm:listTagsForCertificate",
				"airflow:getEnvironment",
				"airflow:listEnvironments",
				"airflow:listTagsForResource",
				"amplify:getApp",
				"amplify:getBranch",
				"amplify:getDomainAssociation",
				"amplify:getJob",
				"amplify:getWebhook",
				"amplify:listApps",
				"amplify:listWebhooks",
				"amplifyuibuilder:exportComponents",
				"amplifyuibuilder:exportThemes",
				"appflow:describeConnectorEntity",
				"appflow:describeConnectorProfiles",
				"appflow:describeConnectors",
				"appflow:describeFlow",
				"appflow:describeFlowExecutionRecords",
				"appflow:listConnectorEntities",
				"appflow:listFlows",
				"application-autoscaling:describeScalableTargets",
				"application-autoscaling:describeScalingActivities",
				"application-autoscaling:describeScalingPolicies",
				"application-autoscaling:describeScheduledActions",
				"applicationinsights:describeComponentConfiguration",
				"applicationinsights:describeComponentConfigurationRecommendation",
				"applicationinsights:listApplications",
				"applicationinsights:listComponents",
				"applicationinsights:listConfigurationHistory",
				"applicationinsights:listLogPatterns",
				"applicationinsights:listLogPatternSets",
				"appmesh:describeGatewayRoute",
				"appmesh:describeMesh",
				"appmesh:describeRoute",
				"appmesh:describeVirtualGateway",
				"appmesh:describeVirtualNode",
				"appmesh:describeVirtualRouter",
				"appmesh:describeVirtualService",
				"appmesh:listGatewayRoutes",
				"appmesh:listMeshes",
				"appmesh:listRoutes",
				"appmesh:listTagsForResource",
				"appmesh:listVirtualGateways",
				"appmesh:listVirtualNodes",
				"appmesh:listVirtualRouters",
				"appmesh:listVirtualServices",
				"apprunner:describeAutoScalingConfiguration",
				"apprunner:describeCustomDomains",
				"apprunner:describeOperation",
				"apprunner:describeService",
				"apprunner:listAutoScalingConfigurations",
				"apprunner:listConnections",
				"apprunner:listOperations",
				"apprunner:listServices",
				"apprunner:listTagsForResource",
				"appstream:describeAppBlocks",
				"appstream:describeApplicationFleetAssociations",
				"appstream:describeApplications",
				"appstream:describeDirectoryConfigs",
				"appstream:describeFleets",
				"appstream:describeImageBuilders",
				"appstream:describeImages",
				"appstream:describeSessions",
				"appstream:describeStacks",
				"appstream:listAssociatedFleets",
				"appstream:listAssociatedStacks",
				"appstream:listTagsForResource",
				"appsync:getFunction",
				"appsync:getGraphqlApi",
				"appsync:getIntrospectionSchema",
				"appsync:getResolver",
				"appsync:getSchemaCreationStatus",
				"appsync:getType",
				"appsync:listDataSources",
				"appsync:listFunctions",
				"appsync:listGraphqlApis",
				"appsync:listResolvers",
				"appsync:listTypes",
				"athena:batchGetNamedQuery",
				"athena:batchGetQueryExecution",
				"athena:getNamedQuery",
				"athena:getQueryExecution",
				"athena:getWorkGroup",
				"athena:listNamedQueries",
				"athena:listQueryExecutions",
				"athena:listTagsForResource",
				"athena:listWorkGroups",
				"auditmanager:getAccountStatus",
				"auditmanager:getDelegations",
				"auditmanager:listAssessmentFrameworks",
				"auditmanager:listAssessmentReports",
				"auditmanager:listAssessments",
				"auditmanager:listControls",
				"auditmanager:listKeywordsForDataSource",
				"auditmanager:listNotifications",
				"autoscaling-plans:describeScalingPlanResources",
				"autoscaling-plans:describeScalingPlans",
				"autoscaling-plans:getScalingPlanResourceForecastData",
				"autoscaling:describeAccountLimits",
				"autoscaling:describeAdjustmentTypes",
				"autoscaling:describeAutoScalingGroups",
				"autoscaling:describeAutoScalingInstances",
				"autoscaling:describeAutoScalingNotificationTypes",
				"autoscaling:describeInstanceRefreshes",
				"autoscaling:describeLaunchConfigurations",
				"autoscaling:describeLifecycleHooks",
				"autoscaling:describeLifecycleHookTypes",
				"autoscaling:describeLoadBalancers",
				"autoscaling:describeLoadBalancerTargetGroups",
				"autoscaling:describeMetricCollectionTypes",
				"autoscaling:describeNotificationConfigurations",
				"autoscaling:describePolicies",
				"autoscaling:describeScalingActivities",
				"autoscaling:describeScalingProcessTypes",
				"autoscaling:describeScheduledActions",
				"autoscaling:describeTags",
				"autoscaling:describeTerminationPolicyTypes",
				"backup:describeBackupJob",
				"backup:describeBackupVault",
				"backup:describeCopyJob",
				"backup:describeFramework",
				"backup:describeGlobalSettings",
				"backup:describeProtectedResource",
				"backup:describeRecoveryPoint",
				"backup:describeRegionSettings",
				"backup:describeReportJob",
				"backup:describeReportPlan",
				"backup:describeRestoreJob",
				"backup:getBackupPlan",
				"backup:getBackupPlanFromJSON",
				"backup:getBackupPlanFromTemplate",
				"backup:getBackupSelection",
				"backup:getBackupVaultAccessPolicy",
				"backup:getBackupVaultNotifications",
				"backup:getRecoveryPointRestoreMetadata",
				"backup:getSupportedResourceTypes",
				"backup:listBackupJobs",
				"backup:listBackupPlans",
				"backup:listBackupPlanTemplates",
				"backup:listBackupPlanVersions",
				"backup:listBackupSelections",
				"backup:listBackupVaults",
				"backup:listCopyJobs",
				"backup:listFrameworks",
				"backup:listProtectedResources",
				"backup:listRecoveryPointsByBackupVault",
				"backup:listRecoveryPointsByResource",
				"backup:listReportJobs",
				"backup:listReportPlans",
				"backup:listRestoreJobs",
				"backup:listTags",
				"batch:describeComputeEnvironments",
				"batch:describeJobDefinitions",
				"batch:describeJobQueues",
				"batch:describeJobs",
				"batch:listJobs",
				"braket:getDevice",
				"braket:getQuantumTask",
				"braket:searchDevices",
				"braket:searchQuantumTasks",
				"budgets:viewBudget",
				"ce:getCostAndUsage",
				"ce:getCostAndUsageWithResources",
				"ce:getCostForecast",
				"ce:getDimensionValues",
				"ce:getReservationCoverage",
				"ce:getReservationPurchaseRecommendation",
				"ce:getReservationUtilization",
				"ce:getRightsizingRecommendation",
				"ce:getSavingsPlansCoverage",
				"ce:getSavingsPlansPurchaseRecommendation",
				"ce:getSavingsPlansUtilization",
				"ce:getSavingsPlansUtilizationDetails",
				"ce:getTags",
				"cloud9:describeEnvironmentMemberships",
				"cloud9:describeEnvironments",
				"cloud9:listEnvironments",
				"clouddirectory:getDirectory",
				"clouddirectory:listDirectories",
				"cloudformation:batchDescribeTypeConfigurations",
				"cloudformation:describeAccountLimits",
				"cloudformation:describeChangeSet",
				"cloudformation:describeChangeSetHooks",
				"cloudformation:describePublisher",
				"cloudformation:describeStackEvents",
				"cloudformation:describeStackInstance",
				"cloudformation:describeStackResource",
				"cloudformation:describeStackResources",
				"cloudformation:describeStacks",
				"cloudformation:describeStackSet",
				"cloudformation:describeStackSetOperation",
				"cloudformation:describeType",
				"cloudformation:describeTypeRegistration",
				"cloudformation:estimateTemplateCost",
				"cloudformation:getStackPolicy",
				"cloudformation:getTemplate",
				"cloudformation:getTemplateSummary",
				"cloudformation:listChangeSets",
				"cloudformation:listExports",
				"cloudformation:listImports",
				"cloudformation:listStackInstances",
				"cloudformation:listStackResources",
				"cloudformation:listStacks",
				"cloudformation:listStackSetOperationResults",
				"cloudformation:listStackSetOperations",
				"cloudformation:listStackSets",
				"cloudformation:listTypeRegistrations",
				"cloudformation:listTypes",
				"cloudformation:listTypeVersions",
				"cloudfront:getCloudFrontOriginAccessIdentity",
				"cloudfront:getCloudFrontOriginAccessIdentityConfig",
				"cloudfront:getDistribution",
				"cloudfront:getDistributionConfig",
				"cloudfront:getInvalidation",
				"cloudfront:getStreamingDistribution",
				"cloudfront:getStreamingDistributionConfig",
				"cloudfront:listCloudFrontOriginAccessIdentities",
				"cloudfront:listDistributions",
				"cloudfront:listDistributionsByWebACLId",
				"cloudfront:listInvalidations",
				"cloudfront:listStreamingDistributions",
				"cloudhsm:describeBackups",
				"cloudhsm:describeClusters",
				"cloudsearch:describeAnalysisSchemes",
				"cloudsearch:describeAvailabilityOptions",
				"cloudsearch:describeDomains",
				"cloudsearch:describeExpressions",
				"cloudsearch:describeIndexFields",
				"cloudsearch:describeScalingParameters",
				"cloudsearch:describeServiceAccessPolicies",
				"cloudsearch:describeSuggesters",
				"cloudsearch:listDomainNames",
				"cloudtrail:describeTrails",
				"cloudtrail:getEventSelectors",
				"cloudtrail:getInsightSelectors",
				"cloudtrail:getTrail",
				"cloudtrail:getTrailStatus",
				"cloudtrail:listPublicKeys",
				"cloudtrail:listTags",
				"cloudtrail:listTrails",
				"cloudtrail:lookupEvents",
				"cloudwatch:describeAlarmHistory",
				"cloudwatch:describeAlarms",
				"cloudwatch:describeAlarmsForMetric",
				"cloudwatch:describeAnomalyDetectors",
				"cloudwatch:describeInsightRules",
				"cloudwatch:getDashboard",
				"cloudwatch:getInsightRuleReport",
				"cloudwatch:getMetricData",
				"cloudwatch:getMetricStatistics",
				"cloudwatch:listDashboards",
				"cloudwatch:listMetrics",
				"codeartifact:describeDomain",
				"codeartifact:describePackageVersion",
				"codeartifact:describeRepository",
				"codeartifact:getDomainPermissionsPolicy",
				"codeartifact:getRepositoryEndpoint",
				"codeartifact:getRepositoryPermissionsPolicy",
				"codeartifact:listDomains",
				"codeartifact:listPackages",
				"codeartifact:listPackageVersionAssets",
				"codeartifact:listPackageVersions",
				"codeartifact:listRepositories",
				"codeartifact:listRepositoriesInDomain",
				"codebuild:batchGetBuildBatches",
				"codebuild:batchGetBuilds",
				"codebuild:batchGetProjects",
				"codebuild:listBuildBatches",
				"codebuild:listBuildBatchesForProject",
				"codebuild:listBuilds",
				"codebuild:listBuildsForProject",
				"codebuild:listCuratedEnvironmentImages",
				"codebuild:listProjects",
				"codebuild:listSourceCredentials",
				"codecommit:batchGetRepositories",
				"codecommit:getBranch",
				"codecommit:getRepository",
				"codecommit:getRepositoryTriggers",
				"codecommit:listBranches",
				"codecommit:listRepositories",
				"codedeploy:batchGetApplicationRevisions",
				"codedeploy:batchGetApplications",
				"codedeploy:batchGetDeploymentGroups",
				"codedeploy:batchGetDeploymentInstances",
				"codedeploy:batchGetDeployments",
				"codedeploy:batchGetDeploymentTargets",
				"codedeploy:batchGetOnPremisesInstances",
				"codedeploy:getApplication",
				"codedeploy:getApplicationRevision",
				"codedeploy:getDeployment",
				"codedeploy:getDeploymentConfig",
				"codedeploy:getDeploymentGroup",
				"codedeploy:getDeploymentInstance",
				"codedeploy:getDeploymentTarget",
				"codedeploy:getOnPremisesInstance",
				"codedeploy:listApplicationRevisions",
				"codedeploy:listApplications",
				"codedeploy:listDeploymentConfigs",
				"codedeploy:listDeploymentGroups",
				"codedeploy:listDeploymentInstances",
				"codedeploy:listDeployments",
				"codedeploy:listDeploymentTargets",
				"codedeploy:listGitHubAccountTokenNames",
				"codedeploy:listOnPremisesInstances",
				"codepipeline:getJobDetails",
				"codepipeline:getPipeline",
				"codepipeline:getPipelineExecution",
				"codepipeline:getPipelineState",
				"codepipeline:listActionExecutions",
				"codepipeline:listActionTypes",
				"codepipeline:listPipelineExecutions",
				"codepipeline:listPipelines",
				"codepipeline:listWebhooks",
				"codestar:describeProject",
				"codestar:listProjects",
				"codestar:listResources",
				"codestar:listTeamMembers",
				"codestar:listUserProfiles",
				"cognito-identity:describeIdentityPool",
				"cognito-identity:getIdentityPoolRoles",
				"cognito-identity:listIdentities",
				"cognito-identity:listIdentityPools",
				"cognito-idp:describeIdentityProvider",
				"cognito-idp:describeResourceServer",
				"cognito-idp:describeRiskConfiguration",
				"cognito-idp:describeUserImportJob",
				"cognito-idp:describeUserPool",
				"cognito-idp:describeUserPoolClient",
				"cognito-idp:describeUserPoolDomain",
				"cognito-idp:getGroup",
				"cognito-idp:getUICustomization",
				"cognito-idp:getUserPoolMfaConfig",
				"cognito-idp:listGroups",
				"cognito-idp:listIdentityProviders",
				"cognito-idp:listResourceServers",
				"cognito-idp:listUserImportJobs",
				"cognito-idp:listUserPoolClients",
				"cognito-idp:listUserPools",
				"cognito-sync:describeDataset",
				"cognito-sync:describeIdentityPoolUsage",
				"cognito-sync:describeIdentityUsage",
				"cognito-sync:getCognitoEvents",
				"cognito-sync:getIdentityPoolConfiguration",
				"cognito-sync:listDatasets",
				"cognito-sync:listIdentityPoolUsage",
				"compute-optimizer:getAutoScalingGroupRecommendations",
				"compute-optimizer:getEBSVolumeRecommendations",
				"compute-optimizer:getEC2InstanceRecommendations",
				"compute-optimizer:getEC2RecommendationProjectedMetrics",
				"compute-optimizer:getEnrollmentStatus",
				"compute-optimizer:getRecommendationSummaries",
				"config:batchGetAggregateResourceConfig",
				"config:batchGetResourceConfig",
				"config:describeAggregateComplianceByConfigRules",
				"config:describeAggregationAuthorizations",
				"config:describeComplianceByConfigRule",
				"config:describeComplianceByResource",
				"config:describeConfigRuleEvaluationStatus",
				"config:describeConfigRules",
				"config:describeConfigurationAggregators",
				"config:describeConfigurationAggregatorSourcesStatus",
				"config:describeConfigurationRecorders",
				"config:describeConfigurationRecorderStatus",
				"config:describeConformancePackCompliance",
				"config:describeConformancePacks",
				"config:describeConformancePackStatus",
				"config:describeDeliveryChannels",
				"config:describeDeliveryChannelStatus",
				"config:describeOrganizationConfigRules",
				"config:describeOrganizationConfigRuleStatuses",
				"config:describeOrganizationConformancePacks",
				"config:describeOrganizationConformancePackStatuses",
				"config:describePendingAggregationRequests",
				"config:describeRemediationConfigurations",
				"config:describeRemediationExceptions",
				"config:describeRemediationExecutionStatus",
				"config:describeRetentionConfigurations",
				"config:getAggregateComplianceDetailsByConfigRule",
				"config:getAggregateConfigRuleComplianceSummary",
				"config:getAggregateDiscoveredResourceCounts",
				"config:getAggregateResourceConfig",
				"config:getComplianceDetailsByConfigRule",
				"config:getComplianceDetailsByResource",
				"config:getComplianceSummaryByConfigRule",
				"config:getComplianceSummaryByResourceType",
				"config:getConformancePackComplianceDetails",
				"config:getConformancePackComplianceSummary",
				"config:getDiscoveredResourceCounts",
				"config:getOrganizationConfigRuleDetailedStatus",
				"config:getOrganizationConformancePackDetailedStatus",
				"config:getResourceConfigHistory",
				"config:listAggregateDiscoveredResources",
				"config:listDiscoveredResources",
				"config:listTagsForResource",
				"connect:describeUser",
				"connect:getCurrentMetricData",
				"connect:getMetricData",
				"connect:listRoutingProfiles",
				"connect:listSecurityProfiles",
				"connect:listUsers",
				"controltower:describeAccountFactoryConfig",
				"controltower:describeCoreService",
				"controltower:describeGuardrail",
				"controltower:describeGuardrailForTarget",
				"controltower:describeManagedAccount",
				"controltower:describeSingleSignOn",
				"controltower:getAvailableUpdates",
				"controltower:getHomeRegion",
				"controltower:getLandingZoneStatus",
				"controltower:listDirectoryGroups",
				"controltower:listGuardrailsForTarget",
				"controltower:listGuardrailViolations",
				"controltower:listManagedAccounts",
				"controltower:listManagedAccountsForGuardrail",
				"controltower:listManagedAccountsForParent",
				"controltower:listManagedOrganizationalUnits",
				"controltower:listManagedOrganizationalUnitsForGuardrail",
				"databrew:describeDataset",
				"databrew:describeJob",
				"databrew:describeProject",
				"databrew:describeRecipe",
				"databrew:listDatasets",
				"databrew:listJobRuns",
				"databrew:listJobs",
				"databrew:listProjects",
				"databrew:listRecipes",
				"databrew:listRecipeVersions",
				"databrew:listTagsForResource",
				"datapipeline:describeObjects",
				"datapipeline:describePipelines",
				"datapipeline:getPipelineDefinition",
				"datapipeline:listPipelines",
				"datapipeline:queryObjects",
				"datasync:describeAgent",
				"datasync:describeLocationEfs",
				"datasync:describeLocationFsxLustre",
				"datasync:describeLocationFsxOpenZfs",
				"datasync:describeLocationFsxWindows",
				"datasync:describeLocationHdfs",
				"datasync:describeLocationNfs",
				"datasync:describeLocationObjectStorage",
				"datasync:describeLocationS3",
				"datasync:describeLocationSmb",
				"datasync:describeTask",
				"datasync:describeTaskExecution",
				"datasync:listAgents",
				"datasync:listLocations",
				"datasync:listTaskExecutions",
				"datasync:listTasks",
				"dax:describeClusters",
				"dax:describeDefaultParameters",
				"dax:describeEvents",
				"dax:describeParameterGroups",
				"dax:describeParameters",
				"dax:describeSubnetGroups",
				"detective:getMembers",
				"detective:listGraphs",
				"detective:listInvitations",
				"detective:listMembers",
				"devicefarm:getAccountSettings",
				"devicefarm:getDevice",
				"devicefarm:getDevicePool",
				"devicefarm:getDevicePoolCompatibility",
				"devicefarm:getJob",
				"devicefarm:getProject",
				"devicefarm:getRemoteAccessSession",
				"devicefarm:getRun",
				"devicefarm:getSuite",
				"devicefarm:getTest",
				"devicefarm:getTestGridProject",
				"devicefarm:getTestGridSession",
				"devicefarm:getUpload",
				"devicefarm:listArtifacts",
				"devicefarm:listDevicePools",
				"devicefarm:listDevices",
				"devicefarm:listJobs",
				"devicefarm:listProjects",
				"devicefarm:listRemoteAccessSessions",
				"devicefarm:listRuns",
				"devicefarm:listSamples",
				"devicefarm:listSuites",
				"devicefarm:listTestGridProjects",
				"devicefarm:listTestGridSessionActions",
				"devicefarm:listTestGridSessionArtifacts",
				"devicefarm:listTestGridSessions",
				"devicefarm:listTests",
				"devicefarm:listUniqueProblems",
				"devicefarm:listUploads",
				"directconnect:describeConnections",
				"directconnect:describeConnectionsOnInterconnect",
				"directconnect:describeInterconnects",
				"directconnect:describeLocations",
				"directconnect:describeVirtualGateways",
				"directconnect:describeVirtualInterfaces",
				"dlm:getLifecyclePolicies",
				"dlm:getLifecyclePolicy",
				"dms:describeAccountAttributes",
				"dms:describeConnections",
				"dms:describeEndpoints",
				"dms:describeEndpointTypes",
				"dms:describeOrderableReplicationInstances",
				"dms:describeRefreshSchemasStatus",
				"dms:describeReplicationInstances",
				"dms:describeReplicationSubnetGroups",
				"drs:describeJobLogItems",
				"drs:describeJobs",
				"drs:describeRecoveryInstances",
				"drs:describeRecoverySnapshots",
				"drs:describeReplicationConfigurationTemplates",
				"drs:describeSourceServers",
				"drs:getLaunchConfiguration",
				"drs:getReplicationConfiguration",
				"drs:listExtensibleSourceServers",
				"drs:listStagingAccounts",
				"ds:describeConditionalForwarders",
				"ds:describeDirectories",
				"ds:describeEventTopics",
				"ds:describeSnapshots",
				"ds:describeTrusts",
				"ds:getDirectoryLimits",
				"ds:getSnapshotLimits",
				"ds:listIpRoutes",
				"ds:listSchemaExtensions",
				"ds:listTagsForResource",
				"dynamodb:describeBackup",
				"dynamodb:describeContinuousBackups",
				"dynamodb:describeGlobalTable",
				"dynamodb:describeLimits",
				"dynamodb:describeStream",
				"dynamodb:describeTable",
				"dynamodb:describeTimeToLive",
				"dynamodb:listBackups",
				"dynamodb:listGlobalTables",
				"dynamodb:listStreams",
				"dynamodb:listTables",
				"dynamodb:listTagsOfResource",
				"ec2:describeAccountAttributes",
				"ec2:describeAddresses",
				"ec2:describeAvailabilityZones",
				"ec2:describeBundleTasks",
				"ec2:describeByoipCidrs",
				"ec2:describeCapacityReservations",
				"ec2:describeClassicLinkInstances",
				"ec2:describeClientVpnAuthorizationRules",
				"ec2:describeClientVpnConnections",
				"ec2:describeClientVpnEndpoints",
				"ec2:describeClientVpnRoutes",
				"ec2:describeClientVpnTargetNetworks",
				"ec2:describeCoipPools",
				"ec2:describeConversionTasks",
				"ec2:describeCustomerGateways",
				"ec2:describeDhcpOptions",
				"ec2:describeElasticGpus",
				"ec2:describeExportImageTasks",
				"ec2:describeExportTasks",
				"ec2:describeFastSnapshotRestores",
				"ec2:describeFleetHistory",
				"ec2:describeFleetInstances",
				"ec2:describeFleets",
				"ec2:describeFlowLogs",
				"ec2:describeHostReservationOfferings",
				"ec2:describeHostReservations",
				"ec2:describeHosts",
				"ec2:describeIdentityIdFormat",
				"ec2:describeIdFormat",
				"ec2:describeImageAttribute",
				"ec2:describeImages",
				"ec2:describeImportImageTasks",
				"ec2:describeImportSnapshotTasks",
				"ec2:describeInstanceAttribute",
				"ec2:describeInstances",
				"ec2:describeInstanceStatus",
				"ec2:describeInternetGateways",
				"ec2:describeIpamPools",
				"ec2:describeIpams",
				"ec2:describeIpamScopes",
				"ec2:describeKeyPairs",
				"ec2:describeLaunchTemplates",
				"ec2:describeLaunchTemplateVersions",
				"ec2:describeLocalGatewayRouteTables",
				"ec2:describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
				"ec2:describeLocalGatewayRouteTableVpcAssociations",
				"ec2:describeLocalGateways",
				"ec2:describeLocalGatewayVirtualInterfaceGroups",
				"ec2:describeLocalGatewayVirtualInterfaces",
				"ec2:describeManagedPrefixLists",
				"ec2:describeMovingAddresses",
				"ec2:describeNatGateways",
				"ec2:describeNetworkAcls",
				"ec2:describeNetworkInterfaceAttribute",
				"ec2:describeNetworkInterfaces",
				"ec2:describePlacementGroups",
				"ec2:describePrefixLists",
				"ec2:describePublicIpv4Pools",
				"ec2:describeRegions",
				"ec2:describeReservedInstances",
				"ec2:describeReservedInstancesListings",
				"ec2:describeReservedInstancesModifications",
				"ec2:describeReservedInstancesOfferings",
				"ec2:describeRouteTables",
				"ec2:describeScheduledInstances",
				"ec2:describeSecurityGroups",
				"ec2:describeSnapshotAttribute",
				"ec2:describeSnapshots",
				"ec2:describeSpotDatafeedSubscription",
				"ec2:describeSpotFleetInstances",
				"ec2:describeSpotFleetRequestHistory",
				"ec2:describeSpotFleetRequests",
				"ec2:describeSpotInstanceRequests",
				"ec2:describeSpotPriceHistory",
				"ec2:describeSubnets",
				"ec2:describeTags",
				"ec2:describeTrafficMirrorFilters",
				"ec2:describeTrafficMirrorSessions",
				"ec2:describeTrafficMirrorTargets",
				"ec2:describeTransitGatewayAttachments",
				"ec2:describeTransitGatewayRouteTables",
				"ec2:describeTransitGateways",
				"ec2:describeTransitGatewayVpcAttachments",
				"ec2:describeVolumeAttribute",
				"ec2:describeVolumes",
				"ec2:describeVolumesModifications",
				"ec2:describeVolumeStatus",
				"ec2:describeVpcAttribute",
				"ec2:describeVpcClassicLink",
				"ec2:describeVpcClassicLinkDnsSupport",
				"ec2:describeVpcEndpointConnectionNotifications",
				"ec2:describeVpcEndpointConnections",
				"ec2:describeVpcEndpoints",
				"ec2:describeVpcEndpointServiceConfigurations",
				"ec2:describeVpcEndpointServicePermissions",
				"ec2:describeVpcEndpointServices",
				"ec2:describeVpcPeeringConnections",
				"ec2:describeVpcs",
				"ec2:describeVpnConnections",
				"ec2:describeVpnGateways",
				"ec2:getCoipPoolUsage",
				"ec2:getConsoleScreenshot",
				"ec2:getIpamAddressHistory",
				"ec2:getIpamPoolAllocations",
				"ec2:getIpamPoolCidrs",
				"ec2:getIpamResourceCidrs",
				"ec2:getManagedPrefixListAssociations",
				"ec2:getManagedPrefixListEntries",
				"ec2:getReservedInstancesExchangeQuote",
				"ec2:searchLocalGatewayRoutes",
				"ecr-public:describeImages",
				"ecr-public:describeImageTags",
				"ecr-public:describeRegistries",
				"ecr-public:describeRepositories",
				"ecr-public:getRegistryCatalogData",
				"ecr-public:getRepositoryCatalogData",
				"ecr-public:getRepositoryPolicy",
				"ecr-public:listTagsForResource",
				"ecr:batchCheckLayerAvailability",
				"ecr:describeImages",
				"ecr:describeImageScanFindings",
				"ecr:describeRegistry",
				"ecr:describeRepositories",
				"ecr:getLifecyclePolicy",
				"ecr:getRegistryPolicy",
				"ecr:getRepositoryPolicy",
				"ecr:listImages",
				"ecr:listTagsForResource",
				"ecs:describeCapacityProviders",
				"ecs:describeClusters",
				"ecs:describeContainerInstances",
				"ecs:describeServices",
				"ecs:describeTaskDefinition",
				"ecs:describeTasks",
				"ecs:describeTaskSets",
				"ecs:listAccountSettings",
				"ecs:listAttributes",
				"ecs:listClusters",
				"ecs:listContainerInstances",
				"ecs:listServices",
				"ecs:listTagsForResource",
				"ecs:listTaskDefinitionFamilies",
				"ecs:listTaskDefinitions",
				"ecs:listTasks",
				"eks:describeCluster",
				"eks:describeFargateProfile",
				"eks:describeNodegroup",
				"eks:describeUpdate",
				"eks:listAddons",
				"eks:listClusters",
				"eks:listFargateProfiles",
				"eks:listNodegroups",
				"eks:listUpdates",
				"elasticache:describeCacheClusters",
				"elasticache:describeCacheEngineVersions",
				"elasticache:describeCacheParameterGroups",
				"elasticache:describeCacheParameters",
				"elasticache:describeCacheSecurityGroups",
				"elasticache:describeCacheSubnetGroups",
				"elasticache:describeEngineDefaultParameters",
				"elasticache:describeEvents",
				"elasticache:describeReplicationGroups",
				"elasticache:describeReservedCacheNodes",
				"elasticache:describeReservedCacheNodesOfferings",
				"elasticache:describeSnapshots",
				"elasticache:listAllowedNodeTypeModifications",
				"elasticache:listTagsForResource",
				"elasticbeanstalk:checkDNSAvailability",
				"elasticbeanstalk:describeApplicationVersions",
				"elasticbeanstalk:describeConfigurationOptions",
				"elasticbeanstalk:describeEnvironmentHealth",
				"elasticbeanstalk:describeEnvironmentManagedActionHistory",
				"elasticbeanstalk:describeEnvironmentManagedActions",
				"elasticbeanstalk:describeEnvironmentResources",
				"elasticbeanstalk:describeEnvironments",
				"elasticbeanstalk:describeEvents",
				"elasticbeanstalk:describeInstancesHealth",
				"elasticbeanstalk:describePlatformVersion",
				"elasticbeanstalk:listAvailableSolutionStacks",
				"elasticbeanstalk:listPlatformVersions",
				"elasticbeanstalk:validateConfigurationSettings",
				"elasticfilesystem:describeAccessPoints",
				"elasticfilesystem:describeFileSystemPolicy",
				"elasticfilesystem:describeFileSystems",
				"elasticfilesystem:describeLifecycleConfiguration",
				"elasticfilesystem:describeMountTargets",
				"elasticfilesystem:describeMountTargetSecurityGroups",
				"elasticfilesystem:describeTags",
				"elasticfilesystem:listTagsForResource",
				"elasticloadbalancing:describeAccountLimits",
				"elasticloadbalancing:describeInstanceHealth",
				"elasticloadbalancing:describeListenerCertificates",
				"elasticloadbalancing:describeListeners",
				"elasticloadbalancing:describeLoadBalancerAttributes",
				"elasticloadbalancing:describeLoadBalancerPolicies",
				"elasticloadbalancing:describeLoadBalancerPolicyTypes",
				"elasticloadbalancing:describeLoadBalancers",
				"elasticloadbalancing:describeRules",
				"elasticloadbalancing:describeSSLPolicies",
				"elasticloadbalancing:describeTags",
				"elasticloadbalancing:describeTargetGroupAttributes",
				"elasticloadbalancing:describeTargetGroups",
				"elasticloadbalancing:describeTargetHealth",
				"elasticmapreduce:describeCluster",
				"elasticmapreduce:describeSecurityConfiguration",
				"elasticmapreduce:describeStep",
				"elasticmapreduce:listBootstrapActions",
				"elasticmapreduce:listClusters",
				"elasticmapreduce:listInstanceGroups",
				"elasticmapreduce:listInstances",
				"elasticmapreduce:listSecurityConfigurations",
				"elasticmapreduce:listSteps",
				"elastictranscoder:listJobsByPipeline",
				"elastictranscoder:listJobsByStatus",
				"elastictranscoder:listPipelines",
				"elastictranscoder:listPresets",
				"elastictranscoder:readPipeline",
				"elastictranscoder:readPreset",
				"es:describeElasticsearchDomain",
				"es:describeElasticsearchDomainConfig",
				"es:describeElasticsearchDomains",
				"es:listDomainNames",
				"events:describeApiDestination",
				"events:describeEventBus",
				"events:describeEventSource",
				"events:describePartnerEventSource",
				"events:describeRule",
				"events:listApiDestinations",
				"events:listConnections",
				"events:listEventBuses",
				"events:listEventSources",
				"events:listPartnerEventSourceAccounts",
				"events:listPartnerEventSources",
				"events:listRuleNamesByTarget",
				"events:listRules",
				"events:listTargetsByRule",
				"events:testEventPattern",
				"firehose:describeDeliveryStream",
				"firehose:listDeliveryStreams",
				"fms:getAdminAccount",
				"fms:getComplianceDetail",
				"fms:getNotificationChannel",
				"fms:getPolicy",
				"fms:getProtectionStatus",
				"fms:listComplianceStatus",
				"fms:listMemberAccounts",
				"fms:listPolicies",
				"forecast:describeDataset",
				"forecast:describeDatasetGroup",
				"forecast:describeDatasetImportJob",
				"forecast:describeForecast",
				"forecast:describeForecastExportJob",
				"forecast:describePredictor",
				"forecast:getAccuracyMetrics",
				"forecast:listDatasetGroups",
				"forecast:listDatasetImportJobs",
				"forecast:listDatasets",
				"forecast:listForecastExportJobs",
				"forecast:listForecasts",
				"forecast:listPredictors",
				"fsx:describeBackups",
				"fsx:describeDataRepositoryTasks",
				"fsx:describeFileSystems",
				"fsx:describeSnapshots",
				"fsx:describeStorageVirtualMachines",
				"fsx:describeVolumes",
				"fsx:listTagsForResource",
				"gamesparks:getExtension",
				"gamesparks:getExtensionVersion",
				"gamesparks:getGame",
				"gamesparks:getSnapshot",
				"gamesparks:getStage",
				"gamesparks:getStageDeployment",
				"gamesparks:listExtensions",
				"gamesparks:listExtensionVersions",
				"gamesparks:listGames",
				"gamesparks:listSnapshots",
				"gamesparks:listStageDeployments",
				"gamesparks:listStages",
				"glacier:describeJob",
				"glacier:describeVault",
				"glacier:getDataRetrievalPolicy",
				"glacier:getVaultAccessPolicy",
				"glacier:getVaultLock",
				"glacier:getVaultNotifications",
				"glacier:listJobs",
				"glacier:listTagsForVault",
				"glacier:listVaults",
				"globalaccelerator:describeAccelerator",
				"globalaccelerator:describeAcceleratorAttributes",
				"globalaccelerator:describeEndpointGroup",
				"globalaccelerator:describeListener",
				"globalaccelerator:listAccelerators",
				"globalaccelerator:listEndpointGroups",
				"globalaccelerator:listListeners",
				"glue:batchGetPartition",
				"glue:checkSchemaVersionValidity",
				"glue:getCatalogImportStatus",
				"glue:getClassifier",
				"glue:getClassifiers",
				"glue:getCrawler",
				"glue:getCrawlerMetrics",
				"glue:getCrawlers",
				"glue:getDatabase",
				"glue:getDatabases",
				"glue:getDataflowGraph",
				"glue:getDevEndpoint",
				"glue:getDevEndpoints",
				"glue:getJob",
				"glue:getJobRun",
				"glue:getJobRuns",
				"glue:getJobs",
				"glue:getMapping",
				"glue:getPartition",
				"glue:getPartitions",
				"glue:getRegistry",
				"glue:getSchema",
				"glue:getSchemaByDefinition",
				"glue:getSchemaVersion",
				"glue:getSchemaVersionsDiff",
				"glue:getTable",
				"glue:getTables",
				"glue:getTableVersions",
				"glue:getTrigger",
				"glue:getTriggers",
				"glue:getUserDefinedFunction",
				"glue:getUserDefinedFunctions",
				"glue:listRegistries",
				"glue:listSchemas",
				"glue:listSchemaVersions",
				"glue:querySchemaVersionMetadata",
				"greengrass:getConnectivityInfo",
				"greengrass:getCoreDefinition",
				"greengrass:getCoreDefinitionVersion",
				"greengrass:getDeploymentStatus",
				"greengrass:getDeviceDefinition",
				"greengrass:getDeviceDefinitionVersion",
				"greengrass:getFunctionDefinition",
				"greengrass:getFunctionDefinitionVersion",
				"greengrass:getGroup",
				"greengrass:getGroupCertificateAuthority",
				"greengrass:getGroupVersion",
				"greengrass:getLoggerDefinition",
				"greengrass:getLoggerDefinitionVersion",
				"greengrass:getResourceDefinitionVersion",
				"greengrass:getServiceRoleForAccount",
				"greengrass:getSubscriptionDefinition",
				"greengrass:getSubscriptionDefinitionVersion",
				"greengrass:listCoreDefinitions",
				"greengrass:listCoreDefinitionVersions",
				"greengrass:listDeployments",
				"greengrass:listDeviceDefinitions",
				"greengrass:listDeviceDefinitionVersions",
				"greengrass:listFunctionDefinitions",
				"greengrass:listFunctionDefinitionVersions",
				"greengrass:listGroups",
				"greengrass:listGroupVersions",
				"greengrass:listLoggerDefinitions",
				"greengrass:listLoggerDefinitionVersions",
				"greengrass:listResourceDefinitions",
				"greengrass:listResourceDefinitionVersions",
				"greengrass:listSubscriptionDefinitions",
				"greengrass:listSubscriptionDefinitionVersions",
				"guardduty:getDetector",
				"guardduty:getFindings",
				"guardduty:getFindingsStatistics",
				"guardduty:getInvitationsCount",
				"guardduty:getIPSet",
				"guardduty:getMasterAccount",
				"guardduty:getMembers",
				"guardduty:getThreatIntelSet",
				"guardduty:listDetectors",
				"guardduty:listFindings",
				"guardduty:listInvitations",
				"guardduty:listIPSets",
				"guardduty:listMembers",
				"guardduty:listThreatIntelSets",
				"health:describeAffectedAccountsForOrganization",
				"health:describeAffectedEntities",
				"health:describeAffectedEntitiesForOrganization",
				"health:describeEntityAggregates",
				"health:describeEventAggregates",
				"health:describeEventDetails",
				"health:describeEventDetailsForOrganization",
				"health:describeEvents",
				"health:describeEventsForOrganization",
				"health:describeEventTypes",
				"health:describeHealthServiceStatusForOrganization",
				"iam:getAccessKeyLastUsed",
				"iam:getAccountAuthorizationDetails",
				"iam:getAccountPasswordPolicy",
				"iam:getAccountSummary",
				"iam:getContextKeysForCustomPolicy",
				"iam:getContextKeysForPrincipalPolicy",
				"iam:getCredentialReport",
				"iam:getGroup",
				"iam:getGroupPolicy",
				"iam:getInstanceProfile",
				"iam:getLoginProfile",
				"iam:getOpenIDConnectProvider",
				"iam:getPolicy",
				"iam:getPolicyVersion",
				"iam:getRole",
				"iam:getRolePolicy",
				"iam:getSAMLProvider",
				"iam:getServerCertificate",
				"iam:getSSHPublicKey",
				"iam:getUser",
				"iam:getUserPolicy",
				"iam:listAccessKeys",
				"iam:listAccountAliases",
				"iam:listAttachedGroupPolicies",
				"iam:listAttachedRolePolicies",
				"iam:listAttachedUserPolicies",
				"iam:listEntitiesForPolicy",
				"iam:listGroupPolicies",
				"iam:listGroups",
				"iam:listGroupsForUser",
				"iam:listInstanceProfiles",
				"iam:listInstanceProfilesForRole",
				"iam:listMFADevices",
				"iam:listOpenIDConnectProviders",
				"iam:listPolicies",
				"iam:listPolicyVersions",
				"iam:listRolePolicies",
				"iam:listRoles",
				"iam:listSAMLProviders",
				"iam:listServerCertificates",
				"iam:listSigningCertificates",
				"iam:listSSHPublicKeys",
				"iam:listUserPolicies",
				"iam:listUsers",
				"iam:listVirtualMFADevices",
				"iam:simulateCustomPolicy",
				"iam:simulatePrincipalPolicy",
				"imagebuilder:getComponent",
				"imagebuilder:getComponentPolicy",
				"imagebuilder:getContainerRecipe",
				"imagebuilder:getDistributionConfiguration",
				"imagebuilder:getImage",
				"imagebuilder:getImagePipeline",
				"imagebuilder:getImagePolicy",
				"imagebuilder:getImageRecipe",
				"imagebuilder:getImageRecipePolicy",
				"imagebuilder:getInfrastructureConfiguration",
				"imagebuilder:listComponentBuildVersions",
				"imagebuilder:listComponents",
				"imagebuilder:listContainerRecipes",
				"imagebuilder:listDistributionConfigurations",
				"imagebuilder:listImageBuildVersions",
				"imagebuilder:listImagePipelineImages",
				"imagebuilder:listImagePipelines",
				"imagebuilder:listImageRecipes",
				"imagebuilder:listImages",
				"imagebuilder:listInfrastructureConfigurations",
				"imagebuilder:listTagsForResource",
				"inspector:describeAssessmentRuns",
				"inspector:describeAssessmentTargets",
				"inspector:describeAssessmentTemplates",
				"inspector:describeCrossAccountAccessRole",
				"inspector:describeResourceGroups",
				"inspector:describeRulesPackages",
				"inspector:getTelemetryMetadata",
				"inspector:listAssessmentRunAgents",
				"inspector:listAssessmentRuns",
				"inspector:listAssessmentTargets",
				"inspector:listAssessmentTemplates",
				"inspector:listEventSubscriptions",
				"inspector:listRulesPackages",
				"inspector:listTagsForResource",
				"inspector2:batchGetAccountStatus",
				"inspector2:batchGetFreeTrialInfo",
				"inspector2:describeOrganizationConfiguration",
				"inspector2:getDelegatedAdminAccount",
				"inspector2:getMember",
				"inspector2:listCoverage",
				"inspector2:listDelegatedAdminAccounts",
				"inspector2:listFilters",
				"inspector2:listFindings",
				"inspector2:listMembers",
				"inspector2:listUsageTotals",
				"iot:describeAuthorizer",
				"iot:describeCACertificate",
				"iot:describeCertificate",
				"iot:describeDefaultAuthorizer",
				"iot:describeEndpoint",
				"iot:describeIndex",
				"iot:describeJobExecution",
				"iot:describeThing",
				"iot:describeThingGroup",
				"iot:describeTunnel",
				"iot:getEffectivePolicies",
				"iot:getIndexingConfiguration",
				"iot:getLoggingOptions",
				"iot:getPolicy",
				"iot:getPolicyVersion",
				"iot:getTopicRule",
				"iot:getV2LoggingOptions",
				"iot:listAttachedPolicies",
				"iot:listAuthorizers",
				"iot:listCACertificates",
				"iot:listCertificates",
				"iot:listCertificatesByCA",
				"iot:listJobExecutionsForJob",
				"iot:listJobExecutionsForThing",
				"iot:listJobs",
				"iot:listOutgoingCertificates",
				"iot:listPolicies",
				"iot:listPolicyPrincipals",
				"iot:listPolicyVersions",
				"iot:listPrincipalPolicies",
				"iot:listPrincipalThings",
				"iot:listRoleAliases",
				"iot:listTargetsForPolicy",
				"iot:listThingGroups",
				"iot:listThingGroupsForThing",
				"iot:listThingPrincipals",
				"iot:listThingRegistrationTasks",
				"iot:listThings",
				"iot:listThingTypes",
				"iot:listTopicRules",
				"iot:listTunnels",
				"iot:listV2LoggingLevels",
				"iotevents:describeDetector",
				"iotevents:describeDetectorModel",
				"iotevents:describeInput",
				"iotevents:describeLoggingOptions",
				"iotevents:listDetectorModels",
				"iotevents:listDetectorModelVersions",
				"iotevents:listDetectors",
				"iotevents:listInputs",
				"iotfleetwise:getCampaign",
				"iotfleetwise:getDecoderManifest",
				"iotfleetwise:getFleet",
				"iotfleetwise:getModelManifest",
				"iotfleetwise:getSignalCatalog",
				"iotfleetwise:getVehicle",
				"iotfleetwise:getVehicleStatus",
				"iotfleetwise:listCampaigns",
				"iotfleetwise:listDecoderManifests",
				"iotfleetwise:listDecoderManifestNetworkInterfaces",
				"iotfleetwise:listDecoderManifestSignals",
				"iotfleetwise:listFleets",
				"iotfleetwise:listFleetsForVehicle",
				"iotfleetwise:listModelManifests",
				"iotfleetwise:listModelManifestNodes",
				"iotfleetwise:listSignalCatalogs",
				"iotfleetwise:listSignalCatalogNodes",
				"iotfleetwise:listVehicles",
				"iotsitewise:describeAccessPolicy",
				"iotsitewise:describeAsset",
				"iotsitewise:describeAssetModel",
				"iotsitewise:describeAssetProperty",
				"iotsitewise:describeDashboard",
				"iotsitewise:describeGateway",
				"iotsitewise:describeGatewayCapabilityConfiguration",
				"iotsitewise:describeLoggingOptions",
				"iotsitewise:describePortal",
				"iotsitewise:describeProject",
				"iotsitewise:listAccessPolicies",
				"iotsitewise:listAssetModels",
				"iotsitewise:listAssets",
				"iotsitewise:listAssociatedAssets",
				"iotsitewise:listDashboards",
				"iotsitewise:listGateways",
				"iotsitewise:listPortals",
				"iotsitewise:listProjectAssets",
				"iotsitewise:listProjects",
				"iottwinmaker:getComponentType",
				"iottwinmaker:getEntity",
				"iottwinmaker:getScene",
				"iottwinmaker:getWorkspace",
				"iottwinmaker:listComponentTypes",
				"iottwinmaker:listEntities",
				"iottwinmaker:listScenes",
				"iottwinmaker:listWorkspaces",
				"iotwireless:getDestination",
				"iotwireless:getDeviceProfile",
				"iotwireless:getPartnerAccount",
				"iotwireless:getServiceEndpoint",
				"iotwireless:getServiceProfile",
				"iotwireless:getWirelessDevice",
				"iotwireless:getWirelessDeviceStatistics",
				"iotwireless:getWirelessGateway",
				"iotwireless:getWirelessGatewayCertificate",
				"iotwireless:getWirelessGatewayFirmwareInformation",
				"iotwireless:getWirelessGatewayStatistics",
				"iotwireless:getWirelessGatewayTask",
				"iotwireless:getWirelessGatewayTaskDefinition",
				"iotwireless:listDestinations",
				"iotwireless:listDeviceProfiles",
				"iotwireless:listPartnerAccounts",
				"iotwireless:listServiceProfiles",
				"iotwireless:listTagsForResource",
				"iotwireless:listWirelessDevices",
				"iotwireless:listWirelessGateways",
				"iotwireless:listWirelessGatewayTaskDefinitions",
				"ivs:listChannels",
				"ivs:listStreams",
				"ivs:listStreamSessions",
				"kafka:describeCluster",
				"kafka:describeClusterOperation",
				"kafka:describeClusterV2",
				"kafka:describeConfiguration",
				"kafka:describeConfigurationRevision",
				"kafka:getBootstrapBrokers",
				"kafka:listConfigurations",
				"kafka:listConfigurationRevisions",
				"kafka:listClusterOperations",
				"kafka:listClusters",
				"kafka:listClustersV2",
				"kafka:listNodes",
				"kendra:describeDataSource",
				"kendra:describeFaq",
				"kendra:describeIndex",
				"kendra:listDataSources",
				"kendra:listFaqs",
				"kendra:listIndices",
				"kinesis:describeStream",
				"kinesis:describeStreamConsumer",
				"kinesis:describeStreamSummary",
				"kinesis:listShards",
				"kinesis:listStreams",
				"kinesis:listStreamConsumers",
				"kinesis:listTagsForStream",
				"kinesisanalytics:describeApplication",
				"kinesisanalytics:describeApplicationSnapshot",
				"kinesisanalytics:listApplications",
				"kinesisanalytics:listApplicationSnapshots",
				"kms:describeKey",
				"kms:getKeyPolicy",
				"kms:getKeyRotationStatus",
				"kms:listAliases",
				"kms:listGrants",
				"kms:listKeyPolicies",
				"kms:listKeys",
				"kms:listResourceTags",
				"kms:listRetirableGrants",
				"lambda:getAccountSettings",
				"lambda:getAlias",
				"lambda:getCodeSigningConfig",
				"lambda:getEventSourceMapping",
				"lambda:getFunction",
				"lambda:getFunctionCodeSigningConfig",
				"lambda:getFunctionConcurrency",
				"lambda:getFunctionConfiguration",
				"lambda:getFunctionEventInvokeConfig",
				"lambda:getFunctionUrlConfig",
				"lambda:getLayerVersion",
				"lambda:getLayerVersionPolicy",
				"lambda:getPolicy",
				"lambda:getProvisionedConcurrencyConfig",
				"lambda:listAliases",
				"lambda:listCodeSigningConfigs",
				"lambda:listEventSourceMappings",
				"lambda:listFunctionEventInvokeConfigs",
				"lambda:listFunctions",
				"lambda:listFunctionsByCodeSigningConfig",
				"lambda:listFunctionUrlConfigs",
				"lambda:listLayers",
				"lambda:listLayerVersions",
				"lambda:listProvisionedConcurrencyConfigs",
				"lambda:listVersionsByFunction",
				"launchwizard:describeProvisionedApp",
				"launchwizard:describeProvisioningEvents",
				"launchwizard:listProvisionedApps",
				"lex:getBot",
				"lex:getBotAlias",
				"lex:getBotAliases",
				"lex:getBotChannelAssociation",
				"lex:getBotChannelAssociations",
				"lex:getBots",
				"lex:getBotVersions",
				"lex:getBuiltinIntent",
				"lex:getBuiltinIntents",
				"lex:getBuiltinSlotTypes",
				"lex:getIntent",
				"lex:getIntents",
				"lex:getIntentVersions",
				"lex:getSlotType",
				"lex:getSlotTypes",
				"lex:getSlotTypeVersions",
				"license-manager:getLicenseConfiguration",
				"license-manager:getServiceSettings",
				"license-manager:listAssociationsForLicenseConfiguration",
				"license-manager:listFailuresForLicenseConfigurationOperations",
				"license-manager:listLicenseConfigurations",
				"license-manager:listLicenseSpecificationsForResource",
				"license-manager:listResourceInventory",
				"license-manager:listUsageForLicenseConfiguration",
				"lightsail:getActiveNames",
				"lightsail:getAlarms",
				"lightsail:getAutoSnapshots",
				"lightsail:getBlueprints",
				"lightsail:getBucketBundles",
				"lightsail:getBucketMetricData",
				"lightsail:getBuckets",
				"lightsail:getBundles",
				"lightsail:getCertificates",
				"lightsail:getContainerImages",
				"lightsail:getContainerServiceDeployments",
				"lightsail:getContainerServiceMetricData",
				"lightsail:getContainerServicePowers",
				"lightsail:getContainerServices",
				"lightsail:getDisk",
				"lightsail:getDisks",
				"lightsail:getDiskSnapshot",
				"lightsail:getDiskSnapshots",
				"lightsail:getDistributionBundles",
				"lightsail:getDistributionMetricData",
				"lightsail:getDistributions",
				"lightsail:getDomain",
				"lightsail:getDomains",
				"lightsail:getExportSnapshotRecords",
				"lightsail:getInstance",
				"lightsail:getInstanceMetricData",
				"lightsail:getInstancePortStates",
				"lightsail:getInstances",
				"lightsail:getInstanceSnapshot",
				"lightsail:getInstanceSnapshots",
				"lightsail:getInstanceState",
				"lightsail:getKeyPair",
				"lightsail:getKeyPairs",
				"lightsail:getLoadBalancer",
				"lightsail:getLoadBalancerMetricData",
				"lightsail:getLoadBalancers",
				"lightsail:getLoadBalancerTlsCertificates",
				"lightsail:getOperation",
				"lightsail:getOperations",
				"lightsail:getOperationsForResource",
				"lightsail:getRegions",
				"lightsail:getRelationalDatabase",
				"lightsail:getRelationalDatabaseMetricData",
				"lightsail:getRelationalDatabases",
				"lightsail:getRelationalDatabaseSnapshot",
				"lightsail:getRelationalDatabaseSnapshots",
				"lightsail:getStaticIp",
				"lightsail:getStaticIps",
				"lightsail:isVpcPeered",
				"logs:describeDestinations",
				"logs:describeExportTasks",
				"logs:describeLogGroups",
				"logs:describeLogStreams",
				"logs:describeMetricFilters",
				"logs:describeQueries",
				"logs:describeResourcePolicies",
				"logs:describeSubscriptionFilters",
				"logs:getLogDelivery",
				"logs:listLogDeliveries",
				"logs:testMetricFilter",
				"lookoutequipment:describeDataIngestionJob",
				"lookoutequipment:describeDataset",
				"lookoutequipment:describeInferenceScheduler",
				"lookoutequipment:describeModel",
				"lookoutequipment:listDataIngestionJobs",
				"lookoutequipment:listDatasets",
				"lookoutequipment:listInferenceExecutions",
				"lookoutequipment:listInferenceSchedulers",
				"lookoutequipment:listModels",
				"lookoutmetrics:describeAlert",
				"lookoutmetrics:describeAnomalyDetectionExecutions",
				"lookoutmetrics:describeAnomalyDetector",
				"lookoutmetrics:describeMetricSet",
				"lookoutmetrics:getAnomalyGroup",
				"lookoutmetrics:getDataQualityMetrics",
				"lookoutmetrics:getFeedback",
				"lookoutmetrics:getSampleData",
				"lookoutmetrics:listAlerts",
				"lookoutmetrics:listAnomalyDetectors",
				"lookoutmetrics:listAnomalyGroupSummaries",
				"lookoutmetrics:listAnomalyGroupTimeSeries",
				"lookoutmetrics:listMetricSets",
				"lookoutmetrics:listTagsForResource",
				"machinelearning:describeBatchPredictions",
				"machinelearning:describeDataSources",
				"machinelearning:describeEvaluations",
				"machinelearning:describeMLModels",
				"machinelearning:getBatchPrediction",
				"machinelearning:getDataSource",
				"machinelearning:getEvaluation",
				"machinelearning:getMLModel",
				"macie2:getClassificationExportConfiguration",
				"macie2:getCustomDataIdentifier",
				"macie2:getFindings",
				"macie2:getFindingStatistics",
				"macie2:listClassificationJobs",
				"macie2:listCustomDataIdentifiers",
				"macie2:listFindings",
				"managedblockchain:getMember",
				"managedblockchain:getNetwork",
				"managedblockchain:getNode",
				"managedblockchain:listMembers",
				"managedblockchain:listNetworks",
				"managedblockchain:listNodes",
				"mediaconnect:describeFlow",
				"mediaconnect:listEntitlements",
				"mediaconnect:listFlows",
				"mediaconvert:describeEndpoints",
				"mediaconvert:getJob",
				"mediaconvert:getJobTemplate",
				"mediaconvert:getPreset",
				"mediaconvert:getQueue",
				"mediaconvert:listJobs",
				"mediaconvert:listJobTemplates",
				"medialive:describeChannel",
				"medialive:describeInput",
				"medialive:describeInputDevice",
				"medialive:describeInputSecurityGroup",
				"medialive:describeMultiplex",
				"medialive:describeOffering",
				"medialive:describeReservation",
				"medialive:describeSchedule",
				"medialive:listChannels",
				"medialive:listInputDevices",
				"medialive:listInputs",
				"medialive:listInputSecurityGroups",
				"medialive:listMultiplexes",
				"medialive:listOfferings",
				"medialive:listReservations",
				"mediapackage:describeChannel",
				"mediapackage:describeOriginEndpoint",
				"mediapackage:listChannels",
				"mediapackage:listOriginEndpoints",
				"mediastore:describeContainer",
				"mediastore:getContainerPolicy",
				"mediastore:getCorsPolicy",
				"mediastore:listContainers",
				"mediatailor:getPlaybackConfiguration",
				"mediatailor:listPlaybackConfigurations",
				"mgn:describeJobLogItems",
				"mgn:describeJobs",
				"mgn:describeLaunchConfigurationTemplates",
				"mgn:describeReplicationConfigurationTemplates",
				"mgn:describeSourceServers",
				"mgn:describeVcenterClients",
				"mgn:getLaunchConfiguration",
				"mgn:getReplicationConfiguration",
				"mobiletargeting:getAdmChannel",
				"mobiletargeting:getApnsChannel",
				"mobiletargeting:getApnsSandboxChannel",
				"mobiletargeting:getApnsVoipChannel",
				"mobiletargeting:getApnsVoipSandboxChannel",
				"mobiletargeting:getApp",
				"mobiletargeting:getApplicationSettings",
				"mobiletargeting:getApps",
				"mobiletargeting:getBaiduChannel",
				"mobiletargeting:getCampaign",
				"mobiletargeting:getCampaignActivities",
				"mobiletargeting:getCampaigns",
				"mobiletargeting:getCampaignVersion",
				"mobiletargeting:getCampaignVersions",
				"mobiletargeting:getEmailChannel",
				"mobiletargeting:getEndpoint",
				"mobiletargeting:getEventStream",
				"mobiletargeting:getExportJob",
				"mobiletargeting:getExportJobs",
				"mobiletargeting:getGcmChannel",
				"mobiletargeting:getImportJob",
				"mobiletargeting:getImportJobs",
				"mobiletargeting:getSegment",
				"mobiletargeting:getSegmentImportJobs",
				"mobiletargeting:getSegments",
				"mobiletargeting:getSegmentVersion",
				"mobiletargeting:getSegmentVersions",
				"mobiletargeting:getSmsChannel",
				"mq:describeBroker",
				"mq:describeConfiguration",
				"mq:describeConfigurationRevision",
				"mq:describeUser",
				"mq:listBrokers",
				"mq:listConfigurationRevisions",
				"mq:listConfigurations",
				"mq:listUsers",
				"m2:getApplication",
				"m2:getApplicationVersion",
				"m2:getBatchJobExecution",
				"m2:getDataSetDetails",
				"m2:getDataSetImportTask",
				"m2:getDeployment",
				"m2:getEnvironment",
				"m2:listApplications",
				"m2:listApplicationVersions",
				"m2:listBatchJobDefinitions",
				"m2:listBatchJobExecutions",
				"m2:listDataSetImportHistory",
				"m2:listDataSets",
				"m2:listDeployments",
				"m2:listEngineVersions",
				"m2:listEnvironments",
				"network-firewall:describeFirewall",
				"network-firewall:describeFirewallPolicy",
				"network-firewall:describeLoggingConfiguration",
				"network-firewall:describeRuleGroup",
				"network-firewall:listFirewallPolicies",
				"network-firewall:listFirewalls",
				"network-firewall:listRuleGroups",
				"networkmanager:describeGlobalNetworks",
				"networkmanager:getConnectAttachment",
				"networkmanager:getConnections",
				"networkmanager:getConnectPeer",
				"networkmanager:getConnectPeerAssociations",
				"networkmanager:getCoreNetwork",
				"networkmanager:getCoreNetworkChangeSet",
				"networkmanager:getCoreNetworkPolicy",
				"networkmanager:getCustomerGatewayAssociations",
				"networkmanager:getDevices",
				"networkmanager:getLinkAssociations",
				"networkmanager:getLinks",
				"networkmanager:getNetworkResourceCounts",
				"networkmanager:getNetworkResourceRelationships",
				"networkmanager:getNetworkResources",
				"networkmanager:getNetworkRoutes",
				"networkmanager:getNetworkTelemetry",
				"networkmanager:getResourcePolicy",
				"networkmanager:getRouteAnalysis",
				"networkmanager:getSites",
				"networkmanager:getSiteToSiteVpnAttachment",
				"networkmanager:getTransitGatewayConnectPeerAssociations",
				"networkmanager:getTransitGatewayRegistrations",
				"networkmanager:getVpcAttachment",
				"networkmanager:listAttachments",
				"networkmanager:listConnectPeers",
				"networkmanager:listCoreNetworkPolicyVersions",
				"networkmanager:listCoreNetworks",
				"networkmanager:listTagsForResource",
				"opsworks-cm:describeAccountAttributes",
				"opsworks-cm:describeBackups",
				"opsworks-cm:describeEvents",
				"opsworks-cm:describeNodeAssociationStatus",
				"opsworks-cm:describeServers",
				"opsworks:describeAgentVersions",
				"opsworks:describeApps",
				"opsworks:describeCommands",
				"opsworks:describeDeployments",
				"opsworks:describeEcsClusters",
				"opsworks:describeElasticIps",
				"opsworks:describeElasticLoadBalancers",
				"opsworks:describeInstances",
				"opsworks:describeLayers",
				"opsworks:describeLoadBasedAutoScaling",
				"opsworks:describeMyUserProfile",
				"opsworks:describePermissions",
				"opsworks:describeRaidArrays",
				"opsworks:describeRdsDbInstances",
				"opsworks:describeServiceErrors",
				"opsworks:describeStackProvisioningParameters",
				"opsworks:describeStacks",
				"opsworks:describeStackSummary",
				"opsworks:describeTimeBasedAutoScaling",
				"opsworks:describeUserProfiles",
				"opsworks:describeVolumes",
				"opsworks:getHostnameSuggestion",
				"organizations:listAccounts",
				"organizations:listTagsForResource",
				"outposts:getOutpost",
				"outposts:getOutpostInstanceTypes",
				"outposts:listAssets",
				"outposts:listOutposts",
				"outposts:listSites",
				"personalize:describeAlgorithm",
				"personalize:describeCampaign",
				"personalize:describeDataset",
				"personalize:describeDatasetGroup",
				"personalize:describeDatasetImportJob",
				"personalize:describeEventTracker",
				"personalize:describeFeatureTransformation",
				"personalize:describeRecipe",
				"personalize:describeSchema",
				"personalize:describeSolution",
				"personalize:describeSolutionVersion",
				"personalize:listCampaigns",
				"personalize:listDatasetGroups",
				"personalize:listDatasetImportJobs",
				"personalize:listDatasets",
				"personalize:listEventTrackers",
				"personalize:listRecipes",
				"personalize:listSchemas",
				"personalize:listSolutions",
				"personalize:listSolutionVersions",
				"polly:describeVoices",
				"polly:getLexicon",
				"polly:listLexicons",
				"pricing:describeServices",
				"pricing:getAttributeValues",
				"pricing:getProducts",
				"private-networks:getDeviceIdentifier",
				"private-networks:getNetwork",
				"private-networks:getNetworkResource",
				"private-networks:listDeviceIdentifiers",
				"private-networks:listNetworks",
				"private-networks:listNetworkResources",
				"quicksight:describeDashboard",
				"quicksight:describeDashboardPermissions",
				"quicksight:describeGroup",
				"quicksight:describeIAMPolicyAssignment",
				"quicksight:describeTemplate",
				"quicksight:describeTemplateAlias",
				"quicksight:describeTemplatePermissions",
				"quicksight:describeUser",
				"quicksight:listDashboards",
				"quicksight:listGroupMemberships",
				"quicksight:listGroups",
				"quicksight:listIAMPolicyAssignments",
				"quicksight:listIAMPolicyAssignmentsForUser",
				"quicksight:listTemplateAliases",
				"quicksight:listTemplates",
				"quicksight:listTemplateVersions",
				"quicksight:listUserGroups",
				"quicksight:listUsers",
				"ram:getPermission",
				"ram:getResourceShareAssociations",
				"ram:getResourceShareInvitations",
				"ram:getResourceShares",
				"ram:listPendingInvitationResources",
				"ram:listPrincipals",
				"ram:listResources",
				"ram:listResourceSharePermissions",
				"rbin:getRule",
				"rbin:listRules",
				"rds:describeAccountAttributes",
				"rds:describeCertificates",
				"rds:describeDBClusterParameterGroups",
				"rds:describeDBClusterParameters",
				"rds:describeDBClusters",
				"rds:describeDBClusterSnapshots",
				"rds:describeDBEngineVersions",
				"rds:describeDBInstances",
				"rds:describeDBParameterGroups",
				"rds:describeDBParameters",
				"rds:describeDBSecurityGroups",
				"rds:describeDBSnapshotAttributes",
				"rds:describeDBSnapshots",
				"rds:describeDBSubnetGroups",
				"rds:describeEngineDefaultClusterParameters",
				"rds:describeEngineDefaultParameters",
				"rds:describeEventCategories",
				"rds:describeEvents",
				"rds:describeEventSubscriptions",
				"rds:describeExportTasks",
				"rds:describeOptionGroupOptions",
				"rds:describeOptionGroups",
				"rds:describeOrderableDBInstanceOptions",
				"rds:describePendingMaintenanceActions",
				"rds:describeReservedDBInstances",
				"rds:describeReservedDBInstancesOfferings",
				"rds:listTagsForResource",
				"redshift-data:describeStatement",
				"redshift-data:listStatements",
				"redshift:describeClusterParameterGroups",
				"redshift:describeClusterParameters",
				"redshift:describeClusters",
				"redshift:describeClusterSecurityGroups",
				"redshift:describeClusterSnapshots",
				"redshift:describeClusterSubnetGroups",
				"redshift:describeClusterVersions",
				"redshift:describeDefaultClusterParameters",
				"redshift:describeEventCategories",
				"redshift:describeEvents",
				"redshift:describeEventSubscriptions",
				"redshift:describeHsmClientCertificates",
				"redshift:describeHsmConfigurations",
				"redshift:describeLoggingStatus",
				"redshift:describeOrderableClusterOptions",
				"redshift:describeReservedNodeOfferings",
				"redshift:describeReservedNodes",
				"redshift:describeResize",
				"redshift:describeSnapshotCopyGrants",
				"redshift:describeStorage",
				"redshift:describeTableRestoreStatus",
				"redshift:describeTags",
				"rekognition:listCollections",
				"rekognition:listFaces",
				"resource-groups:getGroup",
				"resource-groups:getGroupQuery",
				"resource-groups:getTags",
				"resource-groups:listGroupResources",
				"resource-groups:listGroups",
				"resource-groups:searchResources",
				"robomaker:batchDescribeSimulationJob",
				"robomaker:describeDeploymentJob",
				"robomaker:describeFleet",
				"robomaker:describeRobot",
				"robomaker:describeRobotApplication",
				"robomaker:describeSimulationApplication",
				"robomaker:describeSimulationJob",
				"robomaker:listDeploymentJobs",
				"robomaker:listFleets",
				"robomaker:listRobotApplications",
				"robomaker:listRobots",
				"robomaker:listSimulationApplications",
				"robomaker:listSimulationJobs",
				"route53-recovery-readiness:getCell",
				"route53-recovery-readiness:getCellReadinessSummary",
				"route53-recovery-readiness:getReadinessCheck",
				"route53-recovery-readiness:getReadinessCheckResourceStatus",
				"route53-recovery-readiness:getReadinessCheckStatus",
				"route53-recovery-readiness:getRecoveryGroup",
				"route53-recovery-readiness:getRecoveryGroupReadinessSummary",
				"route53-recovery-readiness:listCells",
				"route53-recovery-readiness:listReadinessChecks",
				"route53-recovery-readiness:listRecoveryGroups",
				"route53-recovery-readiness:listResourceSets",
				"route53:getChange",
				"route53:getCheckerIpRanges",
				"route53:getGeoLocation",
				"route53:getHealthCheck",
				"route53:getHealthCheckCount",
				"route53:getHealthCheckLastFailureReason",
				"route53:getHealthCheckStatus",
				"route53:getHostedZone",
				"route53:getHostedZoneCount",
				"route53:getReusableDelegationSet",
				"route53:getTrafficPolicy",
				"route53:getTrafficPolicyInstance",
				"route53:getTrafficPolicyInstanceCount",
				"route53:listGeoLocations",
				"route53:listHealthChecks",
				"route53:listHostedZones",
				"route53:listHostedZonesByName",
				"route53:listHostedZonesByVpc",
				"route53:listResourceRecordSets",
				"route53:listReusableDelegationSets",
				"route53:listTrafficPolicies",
				"route53:listTrafficPolicyInstances",
				"route53:listTrafficPolicyInstancesByHostedZone",
				"route53:listTrafficPolicyInstancesByPolicy",
				"route53:listTrafficPolicyVersions",
				"route53domains:checkDomainAvailability",
				"route53domains:getContactReachabilityStatus",
				"route53domains:getDomainDetail",
				"route53domains:getOperationDetail",
				"route53domains:listDomains",
				"route53domains:listOperations",
				"route53domains:listTagsForDomain",
				"route53domains:viewBilling",
				"route53resolver:getFirewallConfig",
				"route53resolver:getFirewallDomainList",
				"route53resolver:getFirewallRuleGroup",
				"route53resolver:getFirewallRuleGroupAssociation",
				"route53resolver:getResolverDnssecConfig",
				"route53resolver:getResolverRulePolicy",
				"route53resolver:listFirewallConfigs",
				"route53resolver:listFirewallDomainLists",
				"route53resolver:listFirewallDomains",
				"route53resolver:listFirewallRuleGroupAssociations",
				"route53resolver:listFirewallRuleGroups",
				"route53resolver:listFirewallRules",
				"route53resolver:listResolverConfigs",
				"route53resolver:listResolverDnssecConfigs",
				"route53resolver:listResolverEndpointIpAddresses",
				"route53resolver:listResolverEndpoints",
				"route53resolver:listResolverRuleAssociations",
				"route53resolver:listResolverRules",
				"route53resolver:listTagsForResource",
				"s3:describeJob",
				"s3:describeMultiRegionAccessPointOperation",
				"s3:getAccelerateConfiguration",
				"s3:getAccessPoint",
				"s3:getAccessPointConfigurationForObjectLambda",
				"s3:getAccessPointForObjectLambda",
				"s3:getAccessPointPolicy",
				"s3:getAccessPointPolicyForObjectLambda",
				"s3:getAccessPointPolicyStatus",
				"s3:getAccessPointPolicyStatusForObjectLambda",
				"s3:getAccountPublicAccessBlock",
				"s3:getAnalyticsConfiguration",
				"s3:getBucketAcl",
				"s3:getBucketCORS",
				"s3:getBucketLocation",
				"s3:getBucketLogging",
				"s3:getBucketNotification",
				"s3:getBucketObjectLockConfiguration",
				"s3:getBucketOwnershipControls",
				"s3:getBucketPolicy",
				"s3:getBucketPolicyStatus",
				"s3:getBucketPublicAccessBlock",
				"s3:getBucketRequestPayment",
				"s3:getBucketVersioning",
				"s3:getBucketWebsite",
				"s3:getEncryptionConfiguration",
				"s3:getIntelligentTieringConfiguration",
				"s3:getInventoryConfiguration",
				"s3:getLifecycleConfiguration",
				"s3:getMetricsConfiguration",
				"s3:getMultiRegionAccessPoint",
				"s3:getMultiRegionAccessPointPolicy",
				"s3:getMultiRegionAccessPointPolicyStatus",
				"s3:getObjectLegalHold",
				"s3:getObjectRetention",
				"s3:getReplicationConfiguration",
				"s3:getStorageLensConfiguration",
				"s3:listAccessPoints",
				"s3:listAccessPointsForObjectLambda",
				"s3:listAllMyBuckets",
				"s3:listBucket",
				"s3:listBucketMultipartUploads",
				"s3:listBucketVersions",
				"s3:listJobs",
				"s3:listMultipartUploadParts",
				"s3:listMultiRegionAccessPoints",
				"s3:listStorageLensConfigurations",
				"sagemaker:describeAction",
				"sagemaker:describeAlgorithm",
				"sagemaker:describeApp",
				"sagemaker:describeArtifact",
				"sagemaker:describeAutoMLJob",
				"sagemaker:describeCompilationJob",
				"sagemaker:describeContext",
				"sagemaker:describeDataQualityJobDefinition",
				"sagemaker:describeDevice",
				"sagemaker:describeDeviceFleet",
				"sagemaker:describeDomain",
				"sagemaker:describeEdgePackagingJob",
				"sagemaker:describeEndpoint",
				"sagemaker:describeEndpointConfig",
				"sagemaker:describeExperiment",
				"sagemaker:describeFeatureGroup",
				"sagemaker:describeHumanTaskUi",
				"sagemaker:describeHyperParameterTuningJob",
				"sagemaker:describeImage",
				"sagemaker:describeImageVersion",
				"sagemaker:describeLabelingJob",
				"sagemaker:describeModel",
				"sagemaker:describeModelBiasJobDefinition",
				"sagemaker:describeModelExplainabilityJobDefinition",
				"sagemaker:describeModelPackage",
				"sagemaker:describeModelPackageGroup",
				"sagemaker:describeModelQualityJobDefinition",
				"sagemaker:describeMonitoringSchedule",
				"sagemaker:describeNotebookInstance",
				"sagemaker:describeNotebookInstanceLifecycleConfig",
				"sagemaker:describePipeline",
				"sagemaker:describePipelineDefinitionForExecution",
				"sagemaker:describePipelineExecution",
				"sagemaker:describeProcessingJob",
				"sagemaker:describeProject",
				"sagemaker:describeSubscribedWorkteam",
				"sagemaker:describeTrainingJob",
				"sagemaker:describeTransformJob",
				"sagemaker:describeTrial",
				"sagemaker:describeTrialComponent",
				"sagemaker:describeUserProfile",
				"sagemaker:describeWorkteam",
				"sagemaker:listActions",
				"sagemaker:listAlgorithms",
				"sagemaker:listApps",
				"sagemaker:listArtifacts",
				"sagemaker:listAssociations",
				"sagemaker:listAutoMLJobs",
				"sagemaker:listCandidatesForAutoMLJob",
				"sagemaker:listCodeRepositories",
				"sagemaker:listCompilationJobs",
				"sagemaker:listContexts",
				"sagemaker:listDataQualityJobDefinitions",
				"sagemaker:listDeviceFleets",
				"sagemaker:listDevices",
				"sagemaker:listDomains",
				"sagemaker:listEdgePackagingJobs",
				"sagemaker:listEndpointConfigs",
				"sagemaker:listEndpoints",
				"sagemaker:listExperiments",
				"sagemaker:listFeatureGroups",
				"sagemaker:listFlowDefinitions",
				"sagemaker:listHumanTaskUis",
				"sagemaker:listHyperParameterTuningJobs",
				"sagemaker:listImages",
				"sagemaker:listImageVersions",
				"sagemaker:listLabelingJobs",
				"sagemaker:listLabelingJobsForWorkteam",
				"sagemaker:listModelBiasJobDefinitions",
				"sagemaker:listModelExplainabilityJobDefinitions",
				"sagemaker:listModelPackageGroups",
				"sagemaker:listModelPackages",
				"sagemaker:listModelQualityJobDefinitions",
				"sagemaker:listModels",
				"sagemaker:listMonitoringExecutions",
				"sagemaker:listMonitoringSchedules",
				"sagemaker:listNotebookInstanceLifecycleConfigs",
				"sagemaker:listNotebookInstances",
				"sagemaker:listPipelineExecutions",
				"sagemaker:listPipelineExecutionSteps",
				"sagemaker:listPipelineParametersForExecution",
				"sagemaker:listPipelines",
				"sagemaker:listProcessingJobs",
				"sagemaker:listProjects",
				"sagemaker:listSubscribedWorkteams",
				"sagemaker:listTags",
				"sagemaker:listTrainingJobs",
				"sagemaker:listTrainingJobsForHyperParameterTuningJob",
				"sagemaker:listTransformJobs",
				"sagemaker:listTrialComponents",
				"sagemaker:listTrials",
				"sagemaker:listUserProfiles",
				"sagemaker:listWorkteams",
				"savingsplans:describeSavingsPlans",
				"sdb:domainMetadata",
				"sdb:listDomains",
				"secretsmanager:describeSecret",
				"secretsmanager:getResourcePolicy",
				"secretsmanager:listSecrets",
				"secretsmanager:listSecretVersionIds",
				"securityhub:getEnabledStandards",
				"securityhub:getFindings",
				"securityhub:getInsightResults",
				"securityhub:getInsights",
				"securityhub:getMasterAccount",
				"securityhub:getMembers",
				"securityhub:listEnabledProductsForImport",
				"securityhub:listInvitations",
				"securityhub:listMembers",
				"serverlessrepo:getApplication",
				"serverlessrepo:getApplicationPolicy",
				"serverlessrepo:getCloudFormationTemplate",
				"serverlessrepo:listApplicationDependencies",
				"serverlessrepo:listApplications",
				"serverlessrepo:listApplicationVersions",
				"servicecatalog:describeConstraint",
				"servicecatalog:describePortfolio",
				"servicecatalog:describeProduct",
				"servicecatalog:describeProductAsAdmin",
				"servicecatalog:describeProductView",
				"servicecatalog:describeProvisioningArtifact",
				"servicecatalog:describeProvisioningParameters",
				"servicecatalog:describeRecord",
				"servicecatalog:listAcceptedPortfolioShares",
				"servicecatalog:listConstraintsForPortfolio",
				"servicecatalog:listLaunchPaths",
				"servicecatalog:listPortfolioAccess",
				"servicecatalog:listPortfolios",
				"servicecatalog:listPortfoliosForProduct",
				"servicecatalog:listPrincipalsForPortfolio",
				"servicecatalog:listProvisioningArtifacts",
				"servicecatalog:listRecordHistory",
				"servicecatalog:scanProvisionedProducts",
				"servicecatalog:searchProducts",
				"servicequotas:getAssociationForServiceQuotaTemplate",
				"servicequotas:getAWSDefaultServiceQuota",
				"servicequotas:getRequestedServiceQuotaChange",
				"servicequotas:getServiceQuota",
				"servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
				"servicequotas:listAWSDefaultServiceQuotas",
				"servicequotas:listRequestedServiceQuotaChangeHistory",
				"servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
				"servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
				"servicequotas:listServiceQuotas",
				"servicequotas:listServices",
				"ses:describeActiveReceiptRuleSet",
				"ses:describeReceiptRule",
				"ses:describeReceiptRuleSet",
				"ses:getAccount",
				"ses:getBlacklistReports",
				"ses:getConfigurationSet",
				"ses:getConfigurationSetEventDestinations",
				"ses:getDedicatedIp",
				"ses:getDedicatedIps",
				"ses:getDeliverabilityDashboardOptions",
				"ses:getDeliverabilityTestReport",
				"ses:getDomainDeliverabilityCampaign",
				"ses:getDomainStatisticsReport",
				"ses:getEmailIdentity",
				"ses:getIdentityDkimAttributes",
				"ses:getIdentityMailFromDomainAttributes",
				"ses:getIdentityNotificationAttributes",
				"ses:getIdentityPolicies",
				"ses:getIdentityVerificationAttributes",
				"ses:getSendQuota",
				"ses:getSendStatistics",
				"ses:listConfigurationSets",
				"ses:listDedicatedIpPools",
				"ses:listDeliverabilityTestReports",
				"ses:listDomainDeliverabilityCampaigns",
				"ses:listEmailIdentities",
				"ses:listIdentities",
				"ses:listIdentityPolicies",
				"ses:listReceiptFilters",
				"ses:listReceiptRuleSets",
				"ses:listTagsForResource",
				"ses:listVerifiedEmailAddresses",
				"shield:describeAttack",
				"shield:describeProtection",
				"shield:describeSubscription",
				"shield:listAttacks",
				"shield:listProtections",
				"sms-voice:getConfigurationSetEventDestinations",
				"sms:getConnectors",
				"sms:getReplicationJobs",
				"sms:getReplicationRuns",
				"sms:getServers",
				"snowball:describeAddress",
				"snowball:describeAddresses",
				"snowball:describeJob",
				"snowball:getSnowballUsage",
				"snowball:listJobs",
				"sns:checkIfPhoneNumberIsOptedOut",
				"sns:getEndpointAttributes",
				"sns:getPlatformApplicationAttributes",
				"sns:getSMSAttributes",
				"sns:getSubscriptionAttributes",
				"sns:getTopicAttributes",
				"sns:listEndpointsByPlatformApplication",
				"sns:listPhoneNumbersOptedOut",
				"sns:listPlatformApplications",
				"sns:listSubscriptions",
				"sns:listSubscriptionsByTopic",
				"sns:listTopics",
				"sqs:getQueueAttributes",
				"sqs:getQueueUrl",
				"sqs:listDeadLetterSourceQueues",
				"sqs:listQueues",
				"ssm-contacts:describeEngagement",
				"ssm-contacts:describePage",
				"ssm-contacts:getContact",
				"ssm-contacts:getContactChannel",
				"ssm-contacts:listContactChannels",
				"ssm-contacts:listContacts",
				"ssm-contacts:listEngagements",
				"ssm-contacts:listPageReceipts",
				"ssm-contacts:listPagesByContact",
				"ssm-contacts:listPagesByEngagement",
				"ssm-incidents:getIncidentRecord",
				"ssm-incidents:getReplicationSet",
				"ssm-incidents:getResponsePlan",
				"ssm-incidents:listIncidentRecords",
				"ssm-incidents:listReplicationSets",
				"ssm-incidents:listResponsePlans",
				"ssm-incidents:listTimelineEvents",
				"ssm:describeActivations",
				"ssm:describeAssociation",
				"ssm:describeAssociationExecutions",
				"ssm:describeAssociationExecutionTargets",
				"ssm:describeAutomationExecutions",
				"ssm:describeAutomationStepExecutions",
				"ssm:describeAvailablePatches",
				"ssm:describeDocument",
				"ssm:describeDocumentPermission",
				"ssm:describeEffectiveInstanceAssociations",
				"ssm:describeEffectivePatchesForPatchBaseline",
				"ssm:describeInstanceAssociationsStatus",
				"ssm:describeInstanceInformation",
				"ssm:describeInstancePatches",
				"ssm:describeInstancePatchStates",
				"ssm:describeInstancePatchStatesForPatchGroup",
				"ssm:describeInventoryDeletions",
				"ssm:describeMaintenanceWindowExecutions",
				"ssm:describeMaintenanceWindowExecutionTaskInvocations",
				"ssm:describeMaintenanceWindowExecutionTasks",
				"ssm:describeMaintenanceWindows",
				"ssm:describeMaintenanceWindowSchedule",
				"ssm:describeMaintenanceWindowsForTarget",
				"ssm:describeMaintenanceWindowTargets",
				"ssm:describeMaintenanceWindowTasks",
				"ssm:describeOpsItems",
				"ssm:describeParameters",
				"ssm:describePatchBaselines",
				"ssm:describePatchGroups",
				"ssm:describePatchGroupState",
				"ssm:describePatchProperties",
				"ssm:describeSessions",
				"ssm:getAutomationExecution",
				"ssm:getCommandInvocation",
				"ssm:getConnectionStatus",
				"ssm:getDefaultPatchBaseline",
				"ssm:getDeployablePatchSnapshotForInstance",
				"ssm:getInventorySchema",
				"ssm:getMaintenanceWindow",
				"ssm:getMaintenanceWindowExecution",
				"ssm:getMaintenanceWindowExecutionTask",
				"ssm:getMaintenanceWindowExecutionTaskInvocation",
				"ssm:getMaintenanceWindowTask",
				"ssm:getOpsItem",
				"ssm:getPatchBaseline",
				"ssm:getPatchBaselineForPatchGroup",
				"ssm:getServiceSetting",
				"ssm:listAssociations",
				"ssm:listAssociationVersions",
				"ssm:listCommandInvocations",
				"ssm:listCommands",
				"ssm:listComplianceItems",
				"ssm:listComplianceSummaries",
				"ssm:listDocuments",
				"ssm:listDocumentVersions",
				"ssm:listOpsItemEvents",
				"ssm:listResourceComplianceSummaries",
				"ssm:listResourceDataSync",
				"ssm:listTagsForResource",
				"states:describeActivity",
				"states:describeExecution",
				"states:describeStateMachine",
				"states:describeStateMachineForExecution",
				"states:getExecutionHistory",
				"states:listActivities",
				"states:listExecutions",
				"states:listStateMachines",
				"storagegateway:describeBandwidthRateLimit",
				"storagegateway:describeCache",
				"storagegateway:describeCachediSCSIVolumes",
				"storagegateway:describeFileSystemAssociations",
				"storagegateway:describeGatewayInformation",
				"storagegateway:describeMaintenanceStartTime",
				"storagegateway:describeNFSFileShares",
				"storagegateway:describeSMBFileShares",
				"storagegateway:describeSMBSettings",
				"storagegateway:describeSnapshotSchedule",
				"storagegateway:describeStorediSCSIVolumes",
				"storagegateway:describeTapeArchives",
				"storagegateway:describeTapeRecoveryPoints",
				"storagegateway:describeTapes",
				"storagegateway:describeUploadBuffer",
				"storagegateway:describeVTLDevices",
				"storagegateway:describeWorkingStorage",
				"storagegateway:listAutomaticTapeCreationPolicies",
				"storagegateway:listFileShares",
				"storagegateway:listFileSystemAssociations",
				"storagegateway:listGateways",
				"storagegateway:listLocalDisks",
				"storagegateway:listTagsForResource",
				"storagegateway:listTapes",
				"storagegateway:listVolumeInitiators",
				"storagegateway:listVolumeRecoveryPoints",
				"storagegateway:listVolumes",
				"swf:countClosedWorkflowExecutions",
				"swf:countOpenWorkflowExecutions",
				"swf:countPendingActivityTasks",
				"swf:countPendingDecisionTasks",
				"swf:describeActivityType",
				"swf:describeDomain",
				"swf:describeWorkflowExecution",
				"swf:describeWorkflowType",
				"swf:getWorkflowExecutionHistory",
				"swf:listActivityTypes",
				"swf:listClosedWorkflowExecutions",
				"swf:listDomains",
				"swf:listOpenWorkflowExecutions",
				"swf:listWorkflowTypes",
				"synthetics:describeCanaries",
				"synthetics:describeCanariesLastRun",
				"synthetics:describeRuntimeVersions",
				"synthetics:getCanary",
				"synthetics:getCanaryRuns",
				"tiros:createQuery",
				"tiros:getQueryAnswer",
				"tiros:getQueryExplanation",
				"transfer:describeExecution",
				"transfer:describeServer",
				"transfer:describeUser",
				"transfer:describeWorkflow",
				"transfer:listExecutions",
				"transfer:listServers",
				"transfer:listTagsForResource",
				"transfer:listUsers",
				"transfer:listWorkflows",
				"transfer:sendWorkflowStepState",
				"waf-regional:getByteMatchSet",
				"waf-regional:getChangeTokenStatus",
				"waf-regional:getIPSet",
				"waf-regional:getRule",
				"waf-regional:getSqlInjectionMatchSet",
				"waf-regional:getWebACL",
				"waf-regional:getWebACLForResource",
				"waf-regional:listByteMatchSets",
				"waf-regional:listIPSets",
				"waf-regional:listResourcesForWebACL",
				"waf-regional:listRules",
				"waf-regional:listSqlInjectionMatchSets",
				"waf-regional:listWebACLs",
				"waf:getByteMatchSet",
				"waf:getChangeTokenStatus",
				"waf:getIPSet",
				"waf:getRule",
				"waf:getSampledRequests",
				"waf:getSizeConstraintSet",
				"waf:getSqlInjectionMatchSet",
				"waf:getWebACL",
				"waf:getXssMatchSet",
				"waf:listByteMatchSets",
				"waf:listIPSets",
				"waf:listRules",
				"waf:listSizeConstraintSets",
				"waf:listSqlInjectionMatchSets",
				"waf:listWebACLs",
				"waf:listXssMatchSets",
				"wafv2:checkCapacity",
				"wafv2:describeManagedRuleGroup",
				"wafv2:getIPSet",
				"wafv2:getLoggingConfiguration",
				"wafv2:getPermissionPolicy",
				"wafv2:getRateBasedStatementManagedKeys",
				"wafv2:getRegexPatternSet",
				"wafv2:getRuleGroup",
				"wafv2:getSampledRequests",
				"wafv2:getWebACL",
				"wafv2:getWebACLForResource",
				"wafv2:listAvailableManagedRuleGroups",
				"wafv2:listIPSets",
				"wafv2:listLoggingConfigurations",
				"wafv2:listRegexPatternSets",
				"wafv2:listResourcesForWebACL",
				"wafv2:listRuleGroups",
				"wafv2:listTagsForResource",
				"wafv2:listWebACLs",
				"workdocs:checkAlias",
				"workdocs:describeAvailableDirectories",
				"workdocs:describeInstances",
				"workmail:describeGroup",
				"workmail:describeOrganization",
				"workmail:describeResource",
				"workmail:describeUser",
				"workmail:listAliases",
				"workmail:listGroupMembers",
				"workmail:listGroups",
				"workmail:listMailboxPermissions",
				"workmail:listOrganizations",
				"workmail:listResourceDelegates",
				"workmail:listResources",
				"workmail:listUsers",
				"workspaces-web:getBrowserSettings",
				"workspaces-web:getIdentityProvider",
				"workspaces-web:getNetworkSettings",
				"workspaces-web:getPortal",
				"workspaces-web:getPortalServiceProviderMetadata",
				"workspaces-web:getTrustStoreCertificate",
				"workspaces-web:getUserSettings",
				"workspaces-web:listBrowserSettings",
				"workspaces-web:listIdentityProviders",
				"workspaces-web:listNetworkSettings",
				"workspaces-web:listPortals",
				"workspaces-web:listTagsForResource",
				"workspaces-web:listTrustStoreCertificates",
				"workspaces-web:listTrustStores",
				"workspaces-web:listUserSettings",
				"workspaces:describeAccount",
				"workspaces:describeAccountModifications",
				"workspaces:describeIpGroups",
				"workspaces:describeTags",
				"workspaces:describeWorkspaceBundles",
				"workspaces:describeWorkspaceDirectories",
				"workspaces:describeWorkspaceImages",
				"workspaces:describeWorkspaces",
				"workspaces:describeWorkspacesConnectionStatus"
			],
			"Effect": "Allow",
			"Resource": [
				"*"
			]
		}
	],
	"Version": "2012-10-17"
}