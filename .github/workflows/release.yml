---
name: Release

on:
  push:
    branches:
      - main
    paths:
      - VERSION
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(cat VERSION)

      - name: Update version references
        run: make update-version-refs

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git diff --exit-code || git commit -m "Finalize v${{ steps.get_version.outputs.VERSION }}" -a

      - name: Push changes
        run: >
          [[ "${{ github.ref }}" == refs/tags/* ]] ||
          git push "https://${{ github.actor }}:${{ github.token }}@github.com/${{ github.repository }}.git" main

      - name: Build source
        uses: udondan/jsii-publish@v0.12.0
        with:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
          BUILD_SOURCE: true

      - name: Build packages
        uses: udondan/jsii-publish@v0.12.0
        with:
          BUILD_PACKAGES: true

      - name: Test Python package
        run: make test-python

      - name: Store packages as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: dist/**/*

      - name: Build CDK variant
        run: make cdk

      - name: Build source
        uses: udondan/jsii-publish@v0.12.0
        with:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
          BUILD_SOURCE: true

      - name: Build packages
        uses: udondan/jsii-publish@v0.12.0
        with:
          BUILD_PACKAGES: true

      - name: Test Python package
        run: make test-python-cdk

      - name: Store packages as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cdk-packages
          path: dist/**/*

      - name: Create tag
        run: |
          git config --local user.email "deemes79@googlemail.com"
          git config --local user.name "udondan"
          git tag -a "v${{ steps.get_version.outputs.VERSION }}" -m "Creates tag v${{ steps.get_version.outputs.VERSION }}"
          git push "https://udondan:${{ secrets.OVERRIDE_TOKEN }}@github.com/${{ github.repository }}.git" --tags
          touch CHANGELOG/v${{ steps.get_version.outputs.VERSION }}.md

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: v${{ steps.get_version.outputs.VERSION }}
          body_path: CHANGELOG/v${{ steps.get_version.outputs.VERSION }}.md

  publish-base-npm:
    name: Publish base to npm
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: packages
          path: dist

      - name: Publish to npm
        uses: udondan/jsii-publish@v0.12.0
        with:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-base-pypi:
    name: Publish base to PyPI
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: packages
          path: dist

      - name: Publish to PyPI
        uses: udondan/jsii-publish@v0.12.0
        with:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}

  publish-base-nuget:
    name: Publish base to NuGet
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: packages
          path: dist

      - name: Publish to NuGet
        uses: udondan/jsii-publish@v0.12.0
        with:
          NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}

  publish-base-maven-github:
    name: Publish base to Maven GitHub
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: packages
          path: dist

      - name: Publish to Maven GitHub
        uses: udondan/jsii-publish@v0.12.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}

  publish-cdk-npm:
    name: Publish CDK to npm
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: cdk-packages
          path: dist

      - name: Publish to npm
        uses: udondan/jsii-publish@v0.12.0
        with:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-cdk-pypi:
    name: Publish CDK to PyPI
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: cdk-packages
          path: dist

      - name: Publish to PyPI
        uses: udondan/jsii-publish@v0.12.0
        with:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}

  publish-cdk-nuget:
    name: Publish CDK to NuGet
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: cdk-packages
          path: dist

      - name: Publish to NuGet
        uses: udondan/jsii-publish@v0.12.0
        with:
          NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}

  publish-cdk-maven-github:
    name: Publish CDK to Maven GitHub
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: cdk-packages
          path: dist

      - name: Publish to Maven GitHub
        uses: udondan/jsii-publish@v0.12.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
