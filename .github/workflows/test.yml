---
name: Test

concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  finalize:
    name: Finalize
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Get the version
        id: get_version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Update version references
        run: make update-version-refs

      - name: Re-format Python documentation examples
        run: |
          pip install autopep8
          make python-examples-adjust-indention

      - name: Check for changes
        id: changes
        run: |
          set -x +e
          [ -f package-lock.json ] && git stash -- package-lock.json
          git diff
          echo "CHANGED=$(git ls-files -m | wc -l | xargs)" >> $GITHUB_OUTPUT

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git diff --exit-code || git commit -m "Finalize v${{ steps.get_version.outputs.VERSION }}" -a
        if: steps.changes.outputs.CHANGED > 0

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.OVERRIDE_TOKEN }}
          branch: ${{ github.head_ref }}
        if: steps.changes.outputs.CHANGED > 0

      - name: Get current SHA
        run: git rev-parse HEAD > /tmp/sha

      - name: Store SHA as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.run_id }}
          path: /tmp/sha

  build-standalone:
    name: "STANDALONE: Build package"
    needs: finalize
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain:1-buster-slim
      options: --group-add sudo
    steps:
      - name: Fetch latest SHA
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.run_id }}
          path: /tmp/sha

      - name: Store latest SHA as output
        id: get_sha
        run: echo "SHA=$(cat /tmp/sha/sha)" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: ${{ steps.get_sha.outputs.SHA }}

      - name: Update package version
        run: npm version "$(cat VERSION)" --allow-same-version --no-git-tag-version

      - name: Install dependencies
        run: make install

      - name: Build source
        run: npm run build

      - name: Build packages
        run: |
          rm -rf dist/*
          npm run package

      - name: Store packages as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: dist/**/*

  build-cdk:
    name: "CDK: Build package"
    needs: finalize
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain:1-buster-slim
      options: --group-add sudo
    steps:
      - name: Fetch latest SHA
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.run_id }}
          path: /tmp/sha

      - name: Store latest SHA as output
        id: get_sha
        run: echo "SHA=$(cat /tmp/sha/sha)" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: ${{ steps.get_sha.outputs.SHA }}

      - name: Update package version
        run: npm version "$(cat VERSION)" --allow-same-version --no-git-tag-version

      - name: Build CDK variant
        run: |
          make install
          make cdk
          cat package.json

      - name: Build source
        run: |
          npm i
          npm run build

      - name: Build packages
        run: |
          rm -rf dist/*
          npm run package

      - name: Store packages as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cdk-packages
          path: dist/**/*

  test-standalone-node:
    name: "STANDALONE: Test Node.js package"
    needs: build-standalone
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain:1-buster-slim
      options: --group-add sudo
    steps:
      - name: Fetch latest SHA
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.run_id }}
          path: /tmp/sha

      - name: Store latest SHA as output
        id: get_sha
        run: echo "SHA=$(cat /tmp/sha/sha)" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: ${{ steps.get_sha.outputs.SHA }}

      - name: Download package
        uses: actions/download-artifact@v3
        with:
          name: packages
          path: dist

      - name: Install package
        run: |
          sed -i "s/iam-floyd/iam-dummy/g" package*
          sed -i "s/import.*'..\/..\/lib';/import * as statement from 'iam-floyd';/g" examples/*/*.ts
          npm i dist/js/iam-floyd@*.jsii.tgz
          sudo npm i -g typescript

      - name: Test npm package
        run: make test-typescript
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  test-standalone-python:
    name: "STANDALONE: Test Python package"
    needs: build-standalone
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain:1-buster-slim
      options: --group-add sudo
    steps:
      - name: Fetch latest SHA
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.run_id }}
          path: /tmp/sha

      - name: Store latest SHA as output
        id: get_sha
        run: echo "SHA=$(cat /tmp/sha/sha)" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: ${{ steps.get_sha.outputs.SHA }}

      - name: Download package
        uses: actions/download-artifact@v3
        with:
          name: packages
          path: dist

      - name: Test Python package
        run: make test-python
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  test-cdk-node:
    name: "CDK: Test Node.js package"
    needs: build-cdk
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain:1-buster-slim
      options: --group-add sudo
    steps:
      - name: Fetch latest SHA
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.run_id }}
          path: /tmp/sha

      - name: Store latest SHA as output
        id: get_sha
        run: echo "SHA=$(cat /tmp/sha/sha)" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: ${{ steps.get_sha.outputs.SHA }}

      - name: Download package
        uses: actions/download-artifact@v3
        with:
          name: cdk-packages
          path: dist

      - name: Install package
        run: |
          sed -i "s/iam-floyd/iam-dummy/g" package*
          sed -i "s/import.*'..\/..\/lib';/import * as statement from 'cdk-iam-floyd';/g" examples/*/*.ts
          npm i dist/js/cdk-iam-floyd@*.jsii.tgz
          sudo npm i -g typescript

      - name: Test npm package
        run: |
          make test-typescript-cdk
          make cdk-test
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  test-cdk-python:
    name: "CDK: Test Python package"
    needs: build-cdk
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain:1-buster-slim
      options: --group-add sudo
    steps:
      - name: Fetch latest SHA
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.run_id }}
          path: /tmp/sha

      - name: Store latest SHA as output
        id: get_sha
        run: echo "SHA=$(cat /tmp/sha/sha)" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: ${{ steps.get_sha.outputs.SHA }}

      - name: Download package
        uses: actions/download-artifact@v3
        with:
          name: cdk-packages
          path: dist

      - name: Test Python package
        run: make test-python-cdk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  report-status:
    name: success
    runs-on: ubuntu-latest
    needs:
      - test-standalone-node
      - test-standalone-python
      - test-cdk-python
      - test-cdk-node
    steps:
      - name: Report success
        run: echo 'Success'
