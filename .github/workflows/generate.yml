---
name: Generate Code from AWS documentation

on:
  schedule:
    # Why 1:57 not and 2:00? Because most hourly jobs probably run at the hour.
    # Keeping concurrent jobs low reduces hardware requirements, being nice to
    # GitHub and the environment.
    - cron: 57 1 * * *
  workflow_dispatch:
    inputs:
      command:
        description: make command to run
        required: true
        default: generate

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Generate code
        uses: udondan/cdk-nodejs@v0.2.0
        with:
          args: make generate
        if: ${{ github.event_name == 'schedule' }}

      - name: Generate code
        uses: udondan/cdk-nodejs@v0.2.0
        with:
          args: make ${{ github.event.inputs.command }}
        if: ${{ github.event_name == 'workflow_dispatch' }}

      - name: Check for changes
        id: changes
        run: |
          set -x +e
          git diff --quiet
          echo ::set-output name=CHANGED::$?

      # fail if the index file does not exist.
      # this could happen if we cannot reach the AWS documentation, or the
      # format of the documentation has changed and therefore cannot generate
      # code.
      - name: Failsafe
        run: test -e lib/index.ts || exit 1
        if: steps.changes.outputs.CHANGED == '1'

      - name: Configure git
        run: |
          set -x
          git config --local user.email "deemes79@googlemail.com"
          git config --local user.name "udondan"
        if: steps.changes.outputs.CHANGED == '1'

      - name: Update version refs
        run: |
          set -x
          perl -pi -e 's/^(\d+\.)(\d+)(\.\d+)$/($1).($2+1).".0"/e' VERSION
          make update-version-refs
        if: steps.changes.outputs.CHANGED == '1'

      - name: Update stats in documentation
        run: make stats
        if: steps.changes.outputs.CHANGED == '1'

      - name: Generate changelog for next release
        run: |
          set -x
          make changelog
          git add CHANGELOG/*
        if: steps.changes.outputs.CHANGED == '1'

      - name: Regenerate code example results
        run: make regenerate-code-example-results
        if: steps.changes.outputs.CHANGED == '1'

      - name: Commit and push all changes
        run: |
          set -x
          rm -rf node_modules tsconfig.json &&
          git add * &&
          git commit -m "Adds latest IAM updates from AWS" &&
          git push "https://udondan:${{ secrets.OVERRIDE_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:main
        if: steps.changes.outputs.CHANGED == '1'
